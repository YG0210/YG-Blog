{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"\ud83d\udcd3 YG\u7b14\u8bb0\u672c","text":"<p>\u4e00\u4e2a\u8bb0\u5f55\u601d\u8003\u3001\u6280\u672f\u4e0e\u751f\u6d3b\u7684\u5730\u65b9\u3002</p> <p>\u4f60\u597d\uff0c\u6211\u662f YG \ud83d\udc4b \u8fd9\u91cc\u662f\u6211\u968f\u624b\u8bb0\u7b14\u8bb0\u7684\u5c0f\u89d2\u843d \u2014\u2014 \u5199\u4ee3\u7801\u7684\u7075\u611f\u3001\u8e29\u5751\u7684\u6559\u8bad\u3001\u8bfb\u8fc7\u7684\u4e66\u3001\u8d70\u8fc7\u7684\u8def\u2026\u2026 \u4e0d\u8ffd\u6c42\u5b8c\u7f8e\uff0c\u53ea\u6c42\u771f\u5b9e\u8bb0\u5f55\u3002</p>"},{"location":"#_1","title":"\ud83c\udd95 \u6700\u65b0\u7b14\u8bb0","text":"<ul> <li> <p>\u6b22\u8fce\u6765\u5230\u6211\u7684\u7b14\u8bb0\u672c \u2014\u2014 2025\u5e749\u670817\u65e5   \u8fd9\u91cc\u4f1a\u6162\u6162\u586b\u6ee1\u6211\u7684\u601d\u8003\u4e0e\u6210\u957f\uff0c\u6b22\u8fce\u5e38\u6765\u770b\u770b\uff5e</p> </li> <li> <p>\u5173\u4e8e\u8fd9\u4e2a\u535a\u5ba2 \u2014\u2014 2025\u5e749\u670817\u65e5   \u7528 GitHub Pages + Markdown \u642d\u5efa\uff0c\u7b80\u5355\u3001\u81ea\u7531\u3002</p> </li> </ul>"},{"location":"#_2","title":"\ud83e\udded \u968f\u65f6\u8bb0\u5f55\uff0c\u968f\u5904\u53ef\u770b","text":"<ul> <li>\u270d\ufe0f \u5199\u7ed9\u81ea\u5df1\u770b\uff0c\u4e5f\u6b22\u8fce\u4f60\u6765\u8bfb</li> <li>\ud83e\udde9 \u6280\u672f\u4e3a\u4e3b\uff0c\u751f\u6d3b\u4e3a\u8f85</li> <li>\u2601\ufe0f \u6258\u7ba1\u5728 GitHub\uff0c\u6c38\u4e45\u4fdd\u5b58</li> </ul> <p>\ud83d\udce9 \u60f3\u8054\u7cfb\u6211\uff1f\u53ef\u4ee5\u53d1\u90ae\u4ef6\u6216\u63d0 Issue \u2014\u2014 \u6211\u4f1a\u8ba4\u771f\u8bfb\u6bcf\u4e00\u6761\u7559\u8a00 \u2764\ufe0f</p>"},{"location":"jupyter/","title":"\ud83d\udcd3 \u5728\u7ebfJupyter\u73af\u5883","text":"\u6b63\u5728\u52a0\u8f7dJupyter\u73af\u5883..."},{"location":"ai/","title":"AI\u5e94\u7528\u5f00\u53d1","text":"<p>AI\u5e94\u7528\u5f00\u53d1\u662f\u5f53\u4eca\u79d1\u6280\u9886\u57df\u7684\u70ed\u95e8\u65b9\u5411\u3002</p>"},{"location":"ai/#_1","title":"\u5206\u7c7b\u5185\u5bb9","text":"<ul> <li>\u673a\u5668\u5b66\u4e60</li> <li>\u6df1\u5ea6\u5b66\u4e60</li> <li>\u5927\u8bed\u8a00\u6a21\u578b</li> </ul>"},{"location":"ai/dl/","title":"\u6df1\u5ea6\u5b66\u4e60","text":"<p>\u6df1\u5ea6\u5b66\u4e60\u662f\u673a\u5668\u5b66\u4e60\u7684\u4e00\u4e2a\u5206\u652f\u3002</p>"},{"location":"ai/dl/#_2","title":"\u57fa\u7840\u6982\u5ff5","text":"<ul> <li>\u795e\u7ecf\u7f51\u7edc\uff1a\u6a21\u4eff\u4eba\u8111\u7ed3\u6784\u7684\u8ba1\u7b97\u6a21\u578b</li> <li>\u524d\u5411\u4f20\u64ad\uff1a\u6570\u636e\u4ece\u8f93\u5165\u5c42\u5230\u8f93\u51fa\u5c42\u7684\u6d41\u52a8</li> <li>\u53cd\u5411\u4f20\u64ad\uff1a\u6839\u636e\u8bef\u5dee\u8c03\u6574\u6743\u91cd</li> </ul>"},{"location":"ai/dl/#_3","title":"\u5e38\u89c1\u6a21\u578b","text":"<ul> <li>CNN\uff08\u5377\u79ef\u795e\u7ecf\u7f51\u7edc\uff09\uff1a\u7528\u4e8e\u56fe\u50cf\u8bc6\u522b</li> <li>RNN\uff08\u5faa\u73af\u795e\u7ecf\u7f51\u7edc\uff09\uff1a\u7528\u4e8e\u5e8f\u5217\u6570\u636e</li> <li>GAN\uff08\u751f\u6210\u5bf9\u6297\u7f51\u7edc\uff09\uff1a\u7528\u4e8e\u751f\u6210\u5185\u5bb9</li> </ul>"},{"location":"ai/llm/","title":"\u5927\u8bed\u8a00\u6a21\u578b","text":"<p>\u5927\u8bed\u8a00\u6a21\u578b\u662f\u8fd1\u5e74\u6765AI\u9886\u57df\u7684\u91cd\u8981\u7a81\u7834\u3002</p>"},{"location":"ai/llm/#_2","title":"\u57fa\u7840\u6982\u5ff5","text":"<ul> <li>\u9884\u8bad\u7ec3\uff1a\u5728\u5927\u89c4\u6a21\u6587\u672c\u6570\u636e\u4e0a\u8bad\u7ec3</li> <li>\u5fae\u8c03\uff1a\u5728\u7279\u5b9a\u4efb\u52a1\u4e0a\u8c03\u6574\u6a21\u578b</li> <li>\u751f\u6210\u5f0fAI\uff1a\u80fd\u591f\u751f\u6210\u7c7b\u4f3c\u4eba\u7c7b\u7684\u6587\u672c</li> </ul>"},{"location":"ai/llm/#_3","title":"\u5e38\u89c1\u6a21\u578b","text":"<ul> <li>GPT\u7cfb\u5217</li> <li>BERT\u7cfb\u5217</li> <li>\u6587\u5fc3\u4e00\u8a00</li> <li>\u8baf\u98de\u661f\u706b</li> <li>\u767e\u5ea6\u6587\u5fc3</li> </ul>"},{"location":"ai/ml/","title":"\u673a\u5668\u5b66\u4e60","text":"<p>\u673a\u5668\u5b66\u4e60\u662fAI\u7684\u4e00\u4e2a\u91cd\u8981\u5206\u652f\u3002</p>"},{"location":"ai/ml/#_2","title":"\u57fa\u7840\u6982\u5ff5","text":"<ul> <li>\u76d1\u7763\u5b66\u4e60\uff1a\u6709\u6807\u7b7e\u6570\u636e\u7684\u5b66\u4e60</li> <li>\u65e0\u76d1\u7763\u5b66\u4e60\uff1a\u65e0\u6807\u7b7e\u6570\u636e\u7684\u5b66\u4e60</li> <li>\u5f3a\u5316\u5b66\u4e60\uff1a\u901a\u8fc7\u5956\u52b1\u673a\u5236\u5b66\u4e60</li> </ul>"},{"location":"ai/ml/#_3","title":"\u5e38\u89c1\u7b97\u6cd5","text":"<ul> <li>\u7ebf\u6027\u56de\u5f52</li> <li>\u51b3\u7b56\u6811</li> <li>\u968f\u673a\u68ee\u6797</li> <li>K\u8fd1\u90bb\u7b97\u6cd5</li> </ul>"},{"location":"algorithm/","title":"\u7b97\u6cd5","text":"<p>\u7b97\u6cd5\u662f\u89e3\u51b3\u95ee\u9898\u7684\u6b65\u9aa4\u548c\u65b9\u6cd5\u3002</p>"},{"location":"algorithm/#_2","title":"\u5206\u7c7b\u5185\u5bb9","text":"<ul> <li>\u6392\u5e8f\u7b97\u6cd5</li> <li>\u67e5\u627e\u7b97\u6cd5</li> <li>\u56fe\u7b97\u6cd5</li> </ul>"},{"location":"algorithm/graph/","title":"\u56fe\u7b97\u6cd5","text":"<p>\u56fe\u7b97\u6cd5\u7528\u4e8e\u5904\u7406\u56fe\u7ed3\u6784\u6570\u636e\u3002</p>"},{"location":"algorithm/graph/#_2","title":"\u5e38\u89c1\u56fe\u7b97\u6cd5","text":"<ul> <li>\u6df1\u5ea6\u4f18\u5148\u641c\u7d22\uff08DFS\uff09\uff1a\u6cbf\u7740\u4e00\u6761\u8def\u5f84\u6df1\u5165\u641c\u7d22</li> <li>\u5e7f\u5ea6\u4f18\u5148\u641c\u7d22\uff08BFS\uff09\uff1a\u9010\u5c42\u6269\u6563\u641c\u7d22</li> <li>\u6700\u77ed\u8def\u5f84\u7b97\u6cd5\uff1aDijkstra\u7b97\u6cd5\u3001Floyd\u7b97\u6cd5</li> <li>\u6700\u5c0f\u751f\u6210\u6811\uff1aPrim\u7b97\u6cd5\u3001Kruskal\u7b97\u6cd5</li> </ul>"},{"location":"algorithm/search/","title":"\u67e5\u627e\u7b97\u6cd5","text":"<p>\u67e5\u627e\u7b97\u6cd5\u7528\u4e8e\u5728\u6570\u636e\u96c6\u4e2d\u5bfb\u627e\u7279\u5b9a\u5143\u7d20\u3002</p>"},{"location":"algorithm/search/#_2","title":"\u5e38\u89c1\u67e5\u627e\u7b97\u6cd5","text":"<ul> <li>\u7ebf\u6027\u67e5\u627e\uff1a\u9010\u4e2a\u68c0\u67e5\u5143\u7d20</li> <li>\u4e8c\u5206\u67e5\u627e\uff1a\u5728\u6709\u5e8f\u6570\u7ec4\u4e2d\u6298\u534a\u67e5\u627e</li> <li>\u54c8\u5e0c\u67e5\u627e\uff1a\u5229\u7528\u54c8\u5e0c\u51fd\u6570\u5feb\u901f\u5b9a\u4f4d</li> <li>\u4e8c\u53c9\u641c\u7d22\u6811\uff1a\u5728\u4e8c\u53c9\u6811\u4e2d\u8fdb\u884c\u67e5\u627e</li> </ul>"},{"location":"algorithm/sort/","title":"\u6392\u5e8f\u7b97\u6cd5","text":"<p>\u6392\u5e8f\u7b97\u6cd5\u7528\u4e8e\u5c06\u6570\u636e\u6309\u7167\u4e00\u5b9a\u987a\u5e8f\u6392\u5217\u3002</p>"},{"location":"algorithm/sort/#_2","title":"\u5e38\u89c1\u6392\u5e8f\u7b97\u6cd5","text":"<ul> <li>\u5192\u6ce1\u6392\u5e8f\uff1a\u76f8\u90bb\u5143\u7d20\u6bd4\u8f83\u5e76\u4ea4\u6362</li> <li>\u9009\u62e9\u6392\u5e8f\uff1a\u6bcf\u6b21\u9009\u62e9\u6700\u5c0f\u5143\u7d20</li> <li>\u63d2\u5165\u6392\u5e8f\uff1a\u5c06\u5143\u7d20\u63d2\u5165\u5230\u5df2\u6392\u5e8f\u90e8\u5206</li> <li>\u5feb\u901f\u6392\u5e8f\uff1a\u5206\u6cbb\u6cd5\uff0c\u9009\u62e9\u57fa\u51c6\u5143\u7d20</li> <li>\u5f52\u5e76\u6392\u5e8f\uff1a\u5206\u6cbb\u6cd5\uff0c\u5408\u5e76\u5df2\u6392\u5e8f\u90e8\u5206</li> </ul>"},{"location":"assets/","title":"Assets \u76ee\u5f55","text":"<p>\u8fd9\u4e2a\u76ee\u5f55\u7528\u4e8e\u5b58\u653e\u7f51\u7ad9\u7684\u524d\u7aef\u8d44\u6e90\u6587\u4ef6\uff0c\u5305\u62ecJavaScript\u811a\u672c\u548cCSS\u6837\u5f0f\u8868\u3002</p>"},{"location":"assets/#_1","title":"\u76ee\u5f55\u5185\u5bb9","text":"<ul> <li>music_player.js: \u97f3\u4e50\u64ad\u653e\u5668\u7684\u5b9e\u73b0\u4ee3\u7801\uff0c\u5305\u542b\u64ad\u653e\u63a7\u5236\u3001\u6b4c\u66f2\u7ba1\u7406\u7b49\u529f\u80fd</li> </ul>"},{"location":"assets/#_2","title":"\u5982\u4f55\u4f7f\u7528","text":"<ol> <li>\u5c06\u60a8\u7684JavaScript\u6587\u4ef6\u548cCSS\u6587\u4ef6\u653e\u5728\u8fd9\u4e2a\u76ee\u5f55\u4e2d</li> <li>\u901a\u8fc7\u9002\u5f53\u7684\u65b9\u5f0f\u5728\u9875\u9762\u4e2d\u5f15\u7528\u8fd9\u4e9b\u6587\u4ef6</li> </ol>"},{"location":"assets/#_3","title":"\u6ce8\u610f\u4e8b\u9879","text":"<ul> <li>\u8bf7\u786e\u4fdd\u60a8\u6dfb\u52a0\u7684\u6587\u4ef6\u4e0e\u7f51\u7ad9\u7684\u5176\u4ed6\u90e8\u5206\u517c\u5bb9</li> <li>\u8fc7\u5927\u7684\u6587\u4ef6\u53ef\u80fd\u4f1a\u5f71\u54cd\u7f51\u7ad9\u52a0\u8f7d\u901f\u5ea6</li> <li>\u5982\u679c\u60a8\u4fee\u6539\u4e86music_player.js\u6587\u4ef6\uff0c\u8bf7\u786e\u4fdd\u66f4\u65b0docs/music/README.md\u4e2d\u7684\u8bf4\u660e\u6587\u6863</li> </ul>"},{"location":"datastructure/","title":"\u6570\u636e\u7ed3\u6784","text":"<p>\u6570\u636e\u7ed3\u6784\u662f\u7ec4\u7ec7\u548c\u5b58\u50a8\u6570\u636e\u7684\u65b9\u5f0f\u3002</p>"},{"location":"datastructure/#_2","title":"\u5206\u7c7b\u5185\u5bb9","text":"<ul> <li>\u7ebf\u6027\u7ed3\u6784</li> <li>\u975e\u7ebf\u6027\u7ed3\u6784</li> </ul>"},{"location":"datastructure/linear/","title":"\u7ebf\u6027\u7ed3\u6784","text":"<p>\u7ebf\u6027\u7ed3\u6784\u4e2d\u7684\u6570\u636e\u5143\u7d20\u4e4b\u95f4\u5b58\u5728\u4e00\u5bf9\u4e00\u7684\u5173\u7cfb\u3002</p>"},{"location":"datastructure/linear/#_2","title":"\u5e38\u89c1\u7ebf\u6027\u7ed3\u6784","text":"<ul> <li>\u6570\u7ec4\uff1a\u56fa\u5b9a\u5927\u5c0f\u7684\u8fde\u7eed\u5b58\u50a8</li> <li>\u94fe\u8868\uff1a\u901a\u8fc7\u6307\u9488\u8fde\u63a5\u7684\u8282\u70b9</li> <li>\u6808\uff1a\u540e\u8fdb\u5148\u51fa\uff08LIFO\uff09\u7684\u6570\u636e\u7ed3\u6784</li> <li>\u961f\u5217\uff1a\u5148\u8fdb\u5148\u51fa\uff08FIFO\uff09\u7684\u6570\u636e\u7ed3\u6784</li> </ul>"},{"location":"datastructure/nonlinear/","title":"\u975e\u7ebf\u6027\u7ed3\u6784","text":"<p>\u975e\u7ebf\u6027\u7ed3\u6784\u4e2d\u7684\u6570\u636e\u5143\u7d20\u4e4b\u95f4\u5b58\u5728\u4e00\u5bf9\u591a\u6216\u591a\u5bf9\u591a\u7684\u5173\u7cfb\u3002</p>"},{"location":"datastructure/nonlinear/#_2","title":"\u5e38\u89c1\u975e\u7ebf\u6027\u7ed3\u6784","text":"<ul> <li>\u6811\uff1a\u5c42\u6b21\u7ed3\u6784\uff0c\u6bcf\u4e2a\u8282\u70b9\u6709\u591a\u4e2a\u5b50\u8282\u70b9</li> <li>\u4e8c\u53c9\u6811\uff1a\u6bcf\u4e2a\u8282\u70b9\u6700\u591a\u6709\u4e24\u4e2a\u5b50\u8282\u70b9</li> <li>\u5806\uff1a\u7279\u6b8a\u7684\u5b8c\u5168\u4e8c\u53c9\u6811</li> <li>\u56fe\uff1a\u7531\u9876\u70b9\u548c\u8fb9\u7ec4\u6210\u7684\u7ed3\u6784</li> </ul>"},{"location":"music/","title":"\u97f3\u4e50\u76ee\u5f55","text":"<p>\u8fd9\u4e2a\u76ee\u5f55\u7528\u4e8e\u5b58\u653e\u60a8\u60f3\u8981\u5728\u7f51\u7ad9\u4e0a\u64ad\u653e\u7684\u97f3\u4e50\u6587\u4ef6\u3002</p>"},{"location":"music/#_2","title":"\u4f7f\u7528\u8bf4\u660e","text":"<ol> <li>\u5c06\u60a8\u7684MP3\u97f3\u4e50\u6587\u4ef6\u590d\u5236\u5230\u8fd9\u4e2a\u76ee\u5f55\u4e2d</li> <li>\u6253\u5f00 <code>docs/assets/music_player.js</code> \u6587\u4ef6\uff0c\u627e\u5230 <code>predefinedMusic</code> \u6570\u7ec4</li> <li>\u5728\u6570\u7ec4\u4e2d\u6dfb\u52a0\u60a8\u7684\u97f3\u4e50\u6587\u4ef6\u540d\uff0c\u683c\u5f0f\u5982\u4e0b\uff1a<code>\"your-music-file.mp3\"</code></li> </ol>"},{"location":"music/#_3","title":"\u793a\u4f8b","text":"<pre><code>// \u5728docs/assets/music_player.js\u6587\u4ef6\u4e2d\nconst predefinedMusic = [\n    \"01.\u5927\u4e08\u592b.mp3\",\n    \"\u4e00\u70b9\u70b9_\u5468\u6770\u4f26_128K.mp3\",\n    \"\u4e00\u8def\u5411\u5317_\u5468\u6770\u4f26_128K.mp3\",\n    // \u6dfb\u52a0\u60a8\u7684\u65b0\u97f3\u4e50\u6587\u4ef6\n    \"your-new-music.mp3\"\n];\n</code></pre>"},{"location":"music/#_4","title":"\u81ea\u52a8\u63d0\u53d6\u6b4c\u540d","text":"<p>\u64ad\u653e\u5668\u4f1a\u5c1d\u8bd5\u81ea\u52a8\u4ece\u6587\u4ef6\u540d\u4e2d\u63d0\u53d6\u5e72\u51c0\u7684\u6b4c\u540d\uff0c\u652f\u6301\u5904\u7406\u4ee5\u4e0b\u683c\u5f0f\uff1a - \u81ea\u52a8\u53bb\u9664\u6570\u5b57\u5e8f\u53f7\uff08\u5982 \"01.\"\uff09 - \u81ea\u52a8\u53bb\u9664\u5e38\u89c1\u540e\u7f00\uff08\u5982 \"_\u5468\u6770\u4f26_128K\"\u3001\"_\u8521\u4f9d\u6797,\u5468\u6770\u4f26_128K\" \u7b49\uff09 - \u81ea\u52a8\u53bb\u9664\u6587\u4ef6\u6269\u5c55\u540d\uff08\u5982 \".mp3\"\uff09</p>"},{"location":"music/#_5","title":"\u6ce8\u610f\u4e8b\u9879","text":"<ul> <li>\u8bf7\u786e\u4fdd\u60a8\u62e5\u6709\u6dfb\u52a0\u7684\u97f3\u4e50\u6587\u4ef6\u7684\u7248\u6743</li> <li>\u8fc7\u5927\u7684\u97f3\u4e50\u6587\u4ef6\u53ef\u80fd\u4f1a\u5f71\u54cd\u7f51\u7ad9\u52a0\u8f7d\u901f\u5ea6</li> <li>\u652f\u6301\u7684\u97f3\u9891\u683c\u5f0f\u4e3b\u8981\u4e3aMP3</li> <li>\u7531\u4e8e\u6d4f\u89c8\u5668\u5b89\u5168\u9650\u5236\uff0c\u65e0\u6cd5\u76f4\u63a5\u8bfb\u53d6\u670d\u52a1\u5668\u76ee\u5f55\uff0c\u56e0\u6b64\u9700\u8981\u624b\u52a8\u5728predefinedMusic\u6570\u7ec4\u4e2d\u6dfb\u52a0\u65b0\u6587\u4ef6</li> </ul>"},{"location":"python/","title":"Python","text":"<p>Python \u662f\u4e00\u79cd\u7b80\u5355\u6613\u5b66\u4e14\u529f\u80fd\u5f3a\u5927\u7684\u9ad8\u7ea7\u7f16\u7a0b\u8bed\u8a00\uff0c\u4ee5\u5176\u4f18\u96c5\u7684\u8bed\u6cd5\u548c\u4e30\u5bcc\u7684\u751f\u6001\u7cfb\u7edf\u95fb\u540d\u4e8e\u4e16\u3002\u5b83\u88ab\u5e7f\u6cdb\u5e94\u7528\u4e8e Web \u5f00\u53d1\u3001\u6570\u636e\u79d1\u5b66\u3001\u4eba\u5de5\u667a\u80fd\u3001\u81ea\u52a8\u5316\u6d4b\u8bd5\u7b49\u4f17\u591a\u9886\u57df\u3002</p>"},{"location":"python/#python_1","title":"\ud83d\udcdc Python\u53d1\u5c55\u5386\u7a0b","text":"<p>Python \u7531\u8377\u5170\u4eba\u5409\u591a\u00b7\u8303\u7f57\u82cf\u59c6\uff08Guido van Rossum\uff09\u4e8e1989\u5e74\u5723\u8bde\u8282\u671f\u95f4\u521b\u5efa\uff0c\u6700\u521d\u4f5c\u4e3a\u4e00\u79cd\u6253\u53d1\u65f6\u95f4\u7684\u4e2a\u4eba\u9879\u76ee\u3002Python\u7684\u8bbe\u8ba1\u7406\u5ff5\u5f3a\u8c03\u4ee3\u7801\u7684\u53ef\u8bfb\u6027\u548c\u7b80\u6d01\u6027\uff0c\u8fd9\u4f53\u73b0\u5728\u5176\u8457\u540d\u7684 \"Python\u4e4b\u7985\"\uff08The Zen of Python\uff09\u4e2d\u3002</p> <ul> <li>1991\u5e74\uff1aPython 0.9.0 \u53d1\u5e03\uff0c\u5305\u542b\u4e86\u7c7b\u3001\u51fd\u6570\u3001\u5f02\u5e38\u5904\u7406\u7b49\u73b0\u4ee3\u7f16\u7a0b\u8bed\u8a00\u7684\u57fa\u672c\u7279\u6027</li> <li>2000\u5e74\uff1aPython 2.0 \u53d1\u5e03\uff0c\u5f15\u5165\u4e86\u5217\u8868\u63a8\u5bfc\u5f0f\u3001\u5783\u573e\u56de\u6536\u673a\u5236\u7b49\u65b0\u7279\u6027</li> <li>2008\u5e74\uff1aPython 3.0 \u53d1\u5e03\uff0c\u505a\u51fa\u4e86\u4e00\u4e9b\u4e0d\u5411\u540e\u517c\u5bb9\u7684\u6539\u8fdb\uff0c\u5982\u7edf\u4e00\u5b57\u7b26\u4e32\u5904\u7406</li> <li>2020\u5e74\uff1aPython 2.x \u7cfb\u5217\u6b63\u5f0f\u505c\u6b62\u652f\u6301\uff0cPython 3.x \u6210\u4e3a\u4e3b\u6d41\u7248\u672c</li> <li>\u81f3\u4eca\uff1aPython \u6301\u7eed\u5feb\u901f\u53d1\u5c55\uff0c3.10+ \u7248\u672c\u5f15\u5165\u4e86\u6a21\u5f0f\u5339\u914d\u3001\u7c7b\u578b\u6807\u6ce8\u7b49\u73b0\u4ee3\u5316\u7279\u6027</li> </ul>"},{"location":"python/#python_2","title":"\u2728 Python\u6838\u5fc3\u7279\u6027","text":"<ul> <li>\u7b80\u6d01\u6613\u8bfb\u7684\u8bed\u6cd5\uff1a\u4f7f\u7528\u7f29\u8fdb\u6765\u5b9a\u4e49\u4ee3\u7801\u5757\uff0c\u51cf\u5c11\u4e86\u5197\u4f59\u7684\u8bed\u6cd5\u5143\u7d20</li> <li>\u89e3\u91ca\u6267\u884c\uff1a\u65e0\u9700\u7f16\u8bd1\uff0c\u76f4\u63a5\u8fd0\u884c\uff0c\u63d0\u9ad8\u4e86\u5f00\u53d1\u6548\u7387</li> <li>\u52a8\u6001\u7c7b\u578b\uff1a\u53d8\u91cf\u65e0\u9700\u58f0\u660e\u7c7b\u578b\uff0c\u4f7f\u7528\u66f4\u52a0\u7075\u6d3b</li> <li>\u9762\u5411\u5bf9\u8c61\uff1a\u652f\u6301\u7c7b\u548c\u5bf9\u8c61\uff0c\u4f46\u4e5f\u4fdd\u7559\u4e86\u51fd\u6570\u5f0f\u548c\u8fc7\u7a0b\u5f0f\u7f16\u7a0b\u7684\u7279\u6027</li> <li>\u4e30\u5bcc\u7684\u6807\u51c6\u5e93\uff1a\u5185\u7f6e\u4e86\u5927\u91cf\u5b9e\u7528\u6a21\u5757\uff0c\u5f00\u7bb1\u5373\u7528</li> <li>\u5f3a\u5927\u7684\u7b2c\u4e09\u65b9\u751f\u6001\uff1a\u901a\u8fc7pip\u53ef\u4ee5\u8f7b\u677e\u5b89\u88c5\u548c\u4f7f\u7528\u6570\u5341\u4e07\u8ba1\u7684\u7b2c\u4e09\u65b9\u5e93</li> <li>\u8de8\u5e73\u53f0\u517c\u5bb9\uff1a\u53ef\u4ee5\u5728Windows\u3001macOS\u3001Linux\u7b49\u5404\u79cd\u64cd\u4f5c\u7cfb\u7edf\u4e0a\u8fd0\u884c</li> <li>\u81ea\u52a8\u5185\u5b58\u7ba1\u7406\uff1a\u5185\u7f6e\u5783\u573e\u56de\u6536\u673a\u5236\uff0c\u51cf\u5c11\u5185\u5b58\u6cc4\u6f0f\u95ee\u9898</li> </ul>"},{"location":"python/#_1","title":"\ud83d\udcbc \u884c\u4e1a\u5e94\u7528\u73b0\u72b6","text":"<p>Python\u5728\u5404\u4e2a\u884c\u4e1a\u548c\u9886\u57df\u90fd\u6709\u5e7f\u6cdb\u7684\u5e94\u7528\uff1a</p> <ul> <li>Web\u5f00\u53d1\uff1aDjango\u3001Flask\u3001FastAPI\u7b49\u6846\u67b6\u8ba9Python\u6210\u4e3aWeb\u5f00\u53d1\u7684\u70ed\u95e8\u9009\u62e9</li> <li>\u6570\u636e\u79d1\u5b66\u4e0e\u5206\u6790\uff1aPandas\u3001NumPy\u3001Matplotlib\u7b49\u5e93\u4f7fPython\u6210\u4e3a\u6570\u636e\u5904\u7406\u7684\u9996\u9009\u8bed\u8a00</li> <li>\u4eba\u5de5\u667a\u80fd\u4e0e\u673a\u5668\u5b66\u4e60\uff1aTensorFlow\u3001PyTorch\u3001Scikit-learn\u7b49\u6846\u67b6\u5728AI\u9886\u57df\u5360\u636e\u4e3b\u5bfc\u5730\u4f4d</li> <li>\u81ea\u52a8\u5316\u811a\u672c\uff1aPython\u662f\u7f16\u5199\u81ea\u52a8\u5316\u6d4b\u8bd5\u3001\u7cfb\u7edf\u7ba1\u7406\u811a\u672c\u7684\u7406\u60f3\u5de5\u5177</li> <li>\u6e38\u620f\u5f00\u53d1\uff1aPygame\u3001Godot\u5f15\u64ce\u7684Python\u7ed1\u5b9a\u7b49\u7528\u4e8e\u6e38\u620f\u5f00\u53d1</li> <li>\u7f51\u7edc\u722c\u866b\uff1aBeautifulSoup\u3001Scrapy\u7b49\u5e93\u7528\u4e8e\u6570\u636e\u91c7\u96c6</li> <li>\u79d1\u5b66\u8ba1\u7b97\uff1aSciPy\u3001SymPy\u7b49\u5e93\u5728\u79d1\u5b66\u8ba1\u7b97\u9886\u57df\u5e7f\u6cdb\u5e94\u7528</li> <li>\u6559\u80b2\u7f16\u7a0b\uff1aPython\u7b80\u5355\u6613\u5b66\uff0c\u662f\u7f16\u7a0b\u5165\u95e8\u6559\u80b2\u7684\u5e38\u7528\u8bed\u8a00</li> </ul>"},{"location":"python/#ai","title":"\ud83d\ude80 AI\u65f6\u4ee3\u7684\u53d1\u5c55\u8d8b\u52bf","text":"<p>\u968f\u7740\u4eba\u5de5\u667a\u80fd\u65f6\u4ee3\u7684\u5230\u6765\uff0cPython\u7684\u91cd\u8981\u6027\u8fdb\u4e00\u6b65\u63d0\u5347\uff1a</p> <ul> <li>\u5927\u8bed\u8a00\u6a21\u578b\u5f00\u53d1\uff1aPython\u662f\u5f00\u53d1\u548c\u4f7f\u7528\u5982GPT\u3001LLaMA\u7b49\u5927\u8bed\u8a00\u6a21\u578b\u7684\u4e3b\u8981\u8bed\u8a00</li> <li>\u6df1\u5ea6\u5b66\u4e60\u6846\u67b6\uff1a\u4e3b\u6d41\u6df1\u5ea6\u5b66\u4e60\u6846\u67b6\u5982TensorFlow\u3001PyTorch\u5747\u4ee5Python\u4e3a\u4e3b\u8981\u63a5\u53e3</li> <li>\u81ea\u52a8\u5316AI\u5de5\u4f5c\u6d41\uff1aPython\u5728MLOps\u3001AutoML\u7b49\u9886\u57df\u53d1\u6325\u5173\u952e\u4f5c\u7528</li> <li>\u8fb9\u7f18AI\u90e8\u7f72\uff1a\u901a\u8fc7\u5982TensorFlow Lite\u7b49\u5de5\u5177\uff0cPython\u4e5f\u80fd\u5728\u8fb9\u7f18\u8bbe\u5907\u4e0a\u8fd0\u884cAI\u6a21\u578b</li> <li>\u8de8\u9886\u57df\u878d\u5408\uff1aPython\u4fc3\u8fdb\u4e86AI\u4e0e\u5176\u4ed6\u9886\u57df\uff08\u5982\u751f\u7269\u4fe1\u606f\u5b66\u3001\u91d1\u878d\u79d1\u6280\u7b49\uff09\u7684\u4ea4\u53c9\u878d\u5408</li> <li>AI\u6c11\u4e3b\u5316\uff1aPython\u964d\u4f4e\u4e86AI\u6280\u672f\u7684\u4f7f\u7528\u95e8\u69db\uff0c\u8ba9\u66f4\u591a\u4eba\u80fd\u591f\u5e94\u7528AI\u6280\u672f</li> <li>\u91cf\u5b50\u8ba1\u7b97\u63a5\u53e3\uff1a\u8bb8\u591a\u91cf\u5b50\u8ba1\u7b97\u5e73\u53f0\u4e5f\u63d0\u4f9bPython\u63a5\u53e3</li> </ul>"},{"location":"python/#_2","title":"\ud83d\udcda \u5206\u7c7b\u5185\u5bb9","text":"<ul> <li>Python\u57fa\u7840 - Python\u7684\u57fa\u7840\u77e5\u8bc6\uff0c\u5305\u62ec\u8bed\u6cd5\u3001\u6570\u636e\u7c7b\u578b\u3001\u63a7\u5236\u7ed3\u6784\u7b49</li> <li>Python\u8fdb\u9636 - Python\u7684\u9ad8\u7ea7\u7279\u6027\uff0c\u5982\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b\u3001\u88c5\u9970\u5668\u3001\u751f\u6210\u5668\u7b49</li> </ul>"},{"location":"python/#_3","title":"\ud83c\udfaf \u5b66\u4e60\u8def\u5f84","text":"<ol> <li>\u5165\u95e8\u9636\u6bb5\uff1a\u638c\u63e1Python\u57fa\u7840\u8bed\u6cd5\u548c\u6570\u636e\u7c7b\u578b</li> <li>\u8fdb\u9636\u9636\u6bb5\uff1a\u5b66\u4e60\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b\u548c\u5e38\u7528\u6a21\u5757</li> <li>\u5b9e\u6218\u9636\u6bb5\uff1a\u901a\u8fc7\u9879\u76ee\u5b9e\u8df5\u63d0\u5347\u7f16\u7a0b\u80fd\u529b</li> <li>\u4e13\u957f\u9636\u6bb5\uff1a\u6df1\u5165\u5b66\u4e60\u7279\u5b9a\u9886\u57df\u7684Python\u5e94\u7528</li> </ol>"},{"location":"python/#python_3","title":"\ud83d\udca1 \u4e3a\u4ec0\u4e48\u9009\u62e9Python\uff1f","text":"<ul> <li>\u7b80\u5355\u6613\u5b66\uff1a\u8bed\u6cd5\u7b80\u6d01\u6e05\u6670\uff0c\u6613\u4e8e\u4e0a\u624b</li> <li>\u751f\u6001\u4e30\u5bcc\uff1a\u62e5\u6709\u4f17\u591a\u7b2c\u4e09\u65b9\u5e93\uff0c\u9002\u7528\u4e8e\u5404\u79cd\u573a\u666f</li> <li>\u793e\u533a\u6d3b\u8dc3\uff1a\u5e9e\u5927\u7684\u5f00\u53d1\u8005\u793e\u533a\u63d0\u4f9b\u652f\u6301</li> <li>\u5c31\u4e1a\u524d\u666f\u597d\uff1a\u5728\u6570\u636e\u5206\u6790\u3001AI\u7b49\u9886\u57df\u9700\u6c42\u65fa\u76db</li> <li>\u9002\u7528\u8303\u56f4\u5e7f\uff1a\u4ece\u521d\u5b66\u8005\u5230\u4e13\u4e1a\u5f00\u53d1\u8005\uff0c\u4ece\u7b80\u5355\u811a\u672c\u5230\u5927\u578b\u5e94\u7528\uff0cPython\u90fd\u80fd\u80dc\u4efb</li> </ul>"},{"location":"python/advanced/","title":"Python\u8fdb\u9636","text":"<p>\u672c\u7ae0\u8282\u8be6\u7ec6\u4ecb\u7ecdPython\u7684\u9ad8\u7ea7\u7279\u6027\uff0c\u5e2e\u52a9\u5f00\u53d1\u8005\u63d0\u5347\u7f16\u7a0b\u6280\u80fd\uff0c\u7f16\u5199\u66f4\u52a0\u4f18\u96c5\u3001\u9ad8\u6548\u7684Python\u4ee3\u7801\u3002</p>"},{"location":"python/advanced/#_1","title":"\ud83e\uddf1 \u9762\u5411\u5bf9\u8c61\u7f16\u7a0b","text":"<p>Python\u662f\u4e00\u79cd\u9762\u5411\u5bf9\u8c61\u7684\u7f16\u7a0b\u8bed\u8a00\uff0c\u652f\u6301\u7c7b\u3001\u7ee7\u627f\u3001\u591a\u6001\u7b49OOP\u6982\u5ff5\u3002</p>"},{"location":"python/advanced/#_2","title":"\u7c7b\u4e0e\u5bf9\u8c61","text":"<pre><code># \u5b9a\u4e49\u7c7b\nclass Person:\n    # \u7c7b\u53d8\u91cf\uff08\u6240\u6709\u5b9e\u4f8b\u5171\u4eab\uff09\n    species = \"Homo sapiens\"\n\n    # \u6784\u9020\u65b9\u6cd5\n    def __init__(self, name, age):\n        # \u5b9e\u4f8b\u53d8\u91cf\uff08\u6bcf\u4e2a\u5b9e\u4f8b\u72ec\u6709\uff09\n        self.name = name\n        self.age = age\n        # \u79c1\u6709\u5c5e\u6027\uff08\u7ea6\u5b9a\u4ee5\u5355\u4e0b\u5212\u7ebf\u5f00\u5934\uff09\n        self._private_var = \"\u8fd9\u662f\u79c1\u6709\u53d8\u91cf\"\n        # \u79c1\u6709\u5c5e\u6027\uff08\u4ee5\u53cc\u4e0b\u5212\u7ebf\u5f00\u5934\u4f1a\u89e6\u53d1\u540d\u79f0\u4fee\u9970\uff09\n        self.__really_private = \"\u8fd9\u662f\u771f\u6b63\u7684\u79c1\u6709\u53d8\u91cf\"\n\n    # \u5b9e\u4f8b\u65b9\u6cd5\n    def greet(self):\n        return f\"Hello, my name is {self.name}.\"\n\n    # \u7c7b\u65b9\u6cd5\uff08\u4f7f\u7528@classmethod\u88c5\u9970\u5668\uff09\n    @classmethod\n    def get_species(cls):\n        return cls.species\n\n    # \u9759\u6001\u65b9\u6cd5\uff08\u4f7f\u7528@staticmethod\u88c5\u9970\u5668\uff09\n    @staticmethod\n    def is_adult(age):\n        return age &gt;= 18\n\n    # \u7279\u6b8a\u65b9\u6cd5\uff08\u9b54\u672f\u65b9\u6cd5\uff09\n    def __str__(self):\n        return f\"Person(name='{self.name}', age={self.age})\"\n\n    def __repr__(self):\n        return f\"Person('{self.name}', {self.age})\"\n\n# \u521b\u5efa\u5bf9\u8c61\u5b9e\u4f8b\nperson = Person(\"YG\", 25)\n\n# \u8bbf\u95ee\u5c5e\u6027\u548c\u65b9\u6cd5\nprint(person.name)          # \u8f93\u51fa: YG\nprint(person.greet())       # \u8f93\u51fa: Hello, my name is YG.\nprint(Person.get_species()) # \u8f93\u51fa: Homo sapiens\nprint(Person.is_adult(30))  # \u8f93\u51fa: True\nprint(person)               # \u8f93\u51fa: Person(name='YG', age=25)\n\n# \u5c1d\u8bd5\u8bbf\u95ee\u79c1\u6709\u5c5e\u6027\nprint(person._private_var)  # \u53ef\u4ee5\u8bbf\u95ee\uff0c\u4f46\u6309\u7ea6\u5b9a\u4e0d\u5e94\u8be5\u8fd9\u6837\u505a\n# print(person.__really_private)  # \u76f4\u63a5\u8bbf\u95ee\u4f1a\u62a5\u9519\nprint(person._Person__really_private)  # \u901a\u8fc7\u4fee\u9970\u540e\u7684\u540d\u79f0\u53ef\u4ee5\u8bbf\u95ee\n</code></pre>"},{"location":"python/advanced/#_3","title":"\u7ee7\u627f\u4e0e\u591a\u6001","text":"<pre><code># \u57fa\u7c7b\nclass Animal:\n    def __init__(self, name):\n        self.name = name\n\n    def speak(self):\n        raise NotImplementedError(\"\u5b50\u7c7b\u5fc5\u987b\u5b9e\u73b0\u6b64\u65b9\u6cd5\")\n\n    def move(self):\n        return f\"{self.name}\u6b63\u5728\u79fb\u52a8\"\n\n# \u5b50\u7c7b\u7ee7\u627f\u57fa\u7c7b\nclass Dog(Animal):\n    def speak(self):\n        return \"Woof!\"\n\nclass Cat(Animal):\n    def speak(self):\n        return \"Meow!\"\n\n# \u591a\u6001\uff1a\u540c\u4e00\u63a5\u53e3\uff0c\u4e0d\u540c\u5b9e\u73b0\nanimals = [Dog(\"Rex\"), Cat(\"Whiskers\")]\nfor animal in animals:\n    print(f\"{animal.name} says: {animal.speak()}\")\n    print(animal.move())\n\n# \u591a\u91cd\u7ee7\u627f\nclass Pet:\n    def __init__(self, owner):\n        self.owner = owner\n\n    def get_owner(self):\n        return self.owner\n\nclass DomesticDog(Dog, Pet):\n    def __init__(self, name, owner):\n        Dog.__init__(self, name)\n        Pet.__init__(self, owner)\n\n    def info(self):\n        return f\"{self.name}\u5c5e\u4e8e{self.owner}\"\n\n# \u4f7f\u7528super()\u51fd\u6570\u8bbf\u95ee\u7236\u7c7b\u65b9\u6cd5\nclass Rectangle:\n    def __init__(self, width, height):\n        self.width = width\n        self.height = height\n\n    def area(self):\n        return self.width * self.height\n\nclass Square(Rectangle):\n    def __init__(self, side_length):\n        super().__init__(side_length, side_length)\n</code></pre>"},{"location":"python/advanced/#_4","title":"\u62bd\u8c61\u7c7b\u4e0e\u63a5\u53e3","text":"<p>Python\u901a\u8fc7abc\u6a21\u5757\u652f\u6301\u62bd\u8c61\u7c7b\uff1a</p> <pre><code>from abc import ABC, abstractmethod\n\n# \u5b9a\u4e49\u62bd\u8c61\u7c7b\nclass Shape(ABC):\n    @abstractmethod\n    def area(self):\n        \"\"\"\u8ba1\u7b97\u9762\u79ef\"\"\"\n        pass\n\n    @abstractmethod\n    def perimeter(self):\n        \"\"\"\u8ba1\u7b97\u5468\u957f\"\"\"\n        pass\n\n# \u5b9e\u73b0\u62bd\u8c61\u7c7b\nclass Circle(Shape):\n    def __init__(self, radius):\n        self.radius = radius\n\n    def area(self):\n        import math\n        return math.pi * self.radius ** 2\n\n    def perimeter(self):\n        import math\n        return 2 * math.pi * self.radius\n\n# \u5c1d\u8bd5\u5b9e\u4f8b\u5316\u62bd\u8c61\u7c7b\u4f1a\u62a5\u9519\n# shape = Shape()  # \u8fd9\u4f1a\u629b\u51fa\u9519\u8bef\n\n# \u5b9e\u4f8b\u5316\u5177\u4f53\u5b50\u7c7b\ncircle = Circle(5)\nprint(f\"Area: {circle.area()}\")\nprint(f\"Perimeter: {circle.perimeter()}\")\n</code></pre>"},{"location":"python/advanced/#_5","title":"\ud83c\udfad \u88c5\u9970\u5668","text":"<p>\u88c5\u9970\u5668\u662f\u4e00\u79cd\u7279\u6b8a\u7684\u51fd\u6570\uff0c\u7528\u4e8e\u4fee\u6539\u5176\u4ed6\u51fd\u6570\u7684\u529f\u80fd\uff0c\u65e0\u9700\u4fee\u6539\u539f\u51fd\u6570\u4ee3\u7801\u3002</p>"},{"location":"python/advanced/#_6","title":"\u57fa\u7840\u88c5\u9970\u5668","text":"<pre><code># \u5b9a\u4e49\u4e00\u4e2a\u7b80\u5355\u7684\u88c5\u9970\u5668\ndef log_decorator(func):\n    def wrapper(*args, **kwargs):\n        print(f\"[\u65e5\u5fd7] \u8c03\u7528\u51fd\u6570: {func.__name__}\")\n        result = func(*args, **kwargs)\n        print(f\"[\u65e5\u5fd7] \u51fd\u6570 {func.__name__} \u6267\u884c\u5b8c\u6bd5\uff0c\u7ed3\u679c: {result}\")\n        return result\n    return wrapper\n\n# \u4f7f\u7528\u88c5\u9970\u5668\u8bed\u6cd5\u7cd6\n@log_decorator\ndef add(a, b):\n    \"\"\"\u8ba1\u7b97\u4e24\u4e2a\u6570\u7684\u548c\"\"\"\n    return a + b\n\n# \u8c03\u7528\u88c5\u9970\u540e\u7684\u51fd\u6570\nresult = add(5, 3)  # \u4f1a\u8f93\u51fa\u65e5\u5fd7\u4fe1\u606f\n\n# \u4e0d\u4f7f\u7528\u8bed\u6cd5\u7cd6\u7684\u65b9\u5f0f\u8c03\u7528\u88c5\u9970\u5668\ndef multiply(a, b):\n    return a * b\n\n# \u624b\u52a8\u5e94\u7528\u88c5\u9970\u5668\nwrapped_multiply = log_decorator(multiply)\nresult = wrapped_multiply(4, 5)\n</code></pre>"},{"location":"python/advanced/#_7","title":"\u88c5\u9970\u5668\u94fe","text":"<pre><code># \u5b9a\u4e49\u591a\u4e2a\u88c5\u9970\u5668\ndef log_entry(func):\n    def wrapper(*args, **kwargs):\n        print(f\"\u8fdb\u5165\u51fd\u6570: {func.__name__}\")\n        return func(*args, **kwargs)\n    return wrapper\n\ndef log_exit(func):\n    def wrapper(*args, **kwargs):\n        result = func(*args, **kwargs)\n        print(f\"\u79bb\u5f00\u51fd\u6570: {func.__name__}\")\n        return result\n    return wrapper\n\n# \u5e94\u7528\u591a\u4e2a\u88c5\u9970\u5668\uff08\u4ece\u4e0b\u5230\u4e0a\u5e94\u7528\uff09\n@log_exit\n@log_entry\ndef divide(a, b):\n    if b == 0:\n        raise ValueError(\"\u9664\u6570\u4e0d\u80fd\u4e3a\u96f6\")\n    return a / b\n\n# \u8c03\u7528\u51fd\u6570\nresult = divide(10, 2)\n# \u8f93\u51fa:\n# \u8fdb\u5165\u51fd\u6570: divide\n# \u79bb\u5f00\u51fd\u6570: divide\n</code></pre>"},{"location":"python/advanced/#_8","title":"\u5e26\u53c2\u6570\u7684\u88c5\u9970\u5668","text":"<pre><code># \u5e26\u53c2\u6570\u7684\u88c5\u9970\u5668\ndef repeat(n):\n    def decorator(func):\n        def wrapper(*args, **kwargs):\n            results = []\n            for i in range(n):\n                results.append(func(*args, **kwargs))\n            return results\n        return wrapper\n    return decorator\n\n# \u4f7f\u7528\u5e26\u53c2\u6570\u7684\u88c5\u9970\u5668\n@repeat(3)\ndef greet(name):\n    return f\"Hello, {name}!\"\n\n# \u8c03\u7528\u51fd\u6570\ngreetings = greet(\"YG\")\nprint(greetings)  # \u8f93\u51fa: ['Hello, YG!', 'Hello, YG!', 'Hello, YG!']\n</code></pre>"},{"location":"python/advanced/#functoolswraps","title":"functools.wraps","text":"<p>\u4f7f\u7528functools.wraps\u4fdd\u7559\u539f\u51fd\u6570\u7684\u5143\u6570\u636e\uff1a</p> <pre><code>import functools\n\ndef my_decorator(func):\n    @functools.wraps(func)  # \u4fdd\u7559\u539f\u51fd\u6570\u7684\u5143\u6570\u636e\n    def wrapper(*args, **kwargs):\n        \"\"\"\u8fd9\u662fwrapper\u51fd\u6570\"\"\"\n        print(f\"\u8c03\u7528\u51fd\u6570: {func.__name__}\")\n        return func(*args, **kwargs)\n    return wrapper\n\n@my_decorator\ndef original_function():\n    \"\"\"\u8fd9\u662f\u539f\u51fd\u6570\u7684\u6587\u6863\u5b57\u7b26\u4e32\"\"\"\n    return \"\u539f\u51fd\u6570\u8fd4\u56de\u503c\"\n\n# \u68c0\u67e5\u51fd\u6570\u5143\u6570\u636e\nprint(original_function.__name__)  # \u8f93\u51fa: original_function\nprint(original_function.__doc__)   # \u8f93\u51fa: \u8fd9\u662f\u539f\u51fd\u6570\u7684\u6587\u6863\u5b57\u7b26\u4e32\n</code></pre>"},{"location":"python/advanced/#_9","title":"\u5e38\u89c1\u88c5\u9970\u5668\u6a21\u5f0f","text":"<pre><code># \u7f13\u5b58\u7ed3\u679c\uff08\u8bb0\u5fc6\u5316\uff09\nimport functools\n\ndef memoize(func):\n    cache = {}\n\n    @functools.wraps(func)\n    def wrapper(*args):\n        if args not in cache:\n            cache[args] = func(*args)\n        return cache[args]\n\n    return wrapper\n\n@memoize\ndef fibonacci(n):\n    \"\"\"\u8ba1\u7b97\u6590\u6ce2\u90a3\u5951\u6570\u5217\u7684\u7b2cn\u9879\"\"\"\n    if n &lt;= 1:\n        return n\n    return fibonacci(n-1) + fibonacci(n-2)\n\n# \u8ba1\u65f6\u88c5\u9970\u5668\ndef timer_decorator(func):\n    import time\n\n    @functools.wraps(func)\n    def wrapper(*args, **kwargs):\n        start_time = time.time()\n        result = func(*args, **kwargs)\n        end_time = time.time()\n        print(f\"\u51fd\u6570 {func.__name__} \u6267\u884c\u8017\u65f6: {end_time - start_time:.4f} \u79d2\")\n        return result\n\n    return wrapper\n\n@timer_decorator\ndef slow_function():\n    import time\n    time.sleep(1)  # \u6a21\u62df\u8017\u65f6\u64cd\u4f5c\n    return \"\u5b8c\u6210\"\n</code></pre>"},{"location":"python/advanced/#_10","title":"\ud83d\udd04 \u751f\u6210\u5668\u4e0e\u8fed\u4ee3\u5668","text":""},{"location":"python/advanced/#_11","title":"\u751f\u6210\u5668","text":"<p>\u751f\u6210\u5668\u662f\u4e00\u79cd\u7279\u6b8a\u7684\u8fed\u4ee3\u5668\uff0c\u4f7f\u7528yield\u8bed\u53e5\u4ea7\u751f\u503c\uff0c\u53ef\u6709\u6548\u8282\u7701\u5185\u5b58\u3002</p> <pre><code># \u7b80\u5355\u7684\u751f\u6210\u5668\u51fd\u6570\ndef count_up_to(max_value):\n    count = 1\n    while count &lt;= max_value:\n        yield count\n        count += 1\n\n# \u4f7f\u7528\u751f\u6210\u5668\ncounter = count_up_to(5)\nfor num in counter:\n    print(num)  # \u8f93\u51fa: 1, 2, 3, 4, 5\n\n# \u751f\u6210\u5668\u8868\u8fbe\u5f0f\uff08\u7c7b\u4f3c\u5217\u8868\u63a8\u5bfc\u5f0f\uff0c\u4f46\u4f7f\u7528\u5706\u62ec\u53f7\uff09\nsquares = (x*x for x in range(10))\nfor square in squares:\n    print(square)\n\n# \u6590\u6ce2\u90a3\u5951\u6570\u5217\u751f\u6210\u5668\ndef fibonacci_generator():\n    a, b = 0, 1\n    while True:\n        yield a\n        a, b = b, a + b\n\n# \u9650\u5236\u751f\u6210\u5668\u7684\u8f93\u51fa\nfib = fibonacci_generator()\nfor i in range(10):\n    print(next(fib))\n\n# \u751f\u6210\u5668\u7684send()\u65b9\u6cd5\ndef echo_generator():\n    response = yield \"Ready for input\"\n    while True:\n        response = yield f\"You said: {response}\"\n\n# \u4f7f\u7528send()\u65b9\u6cd5\u4e0e\u751f\u6210\u5668\u4ea4\u4e92\ngen = echo_generator()\nprint(next(gen))  # \u542f\u52a8\u751f\u6210\u5668\uff0c\u8f93\u51fa: Ready for input\nprint(gen.send(\"Hello\"))  # \u53d1\u9001\u6570\u636e\uff0c\u8f93\u51fa: You said: Hello\nprint(gen.send(\"Python\"))  # \u53d1\u9001\u6570\u636e\uff0c\u8f93\u51fa: You said: Python\n</code></pre>"},{"location":"python/advanced/#_12","title":"\u8fed\u4ee3\u5668","text":"<p>\u8fed\u4ee3\u5668\u662f\u5b9e\u73b0\u4e86__iter__()\u548c__next__()\u65b9\u6cd5\u7684\u5bf9\u8c61\u3002</p> <pre><code># \u81ea\u5b9a\u4e49\u8fed\u4ee3\u5668\u7c7b\nclass Countdown:\n    def __init__(self, start):\n        self.start = start\n\n    def __iter__(self):\n        # \u8fd4\u56de\u8fed\u4ee3\u5668\u5bf9\u8c61\u81ea\u8eab\n        self.current = self.start\n        return self\n\n    def __next__(self):\n        # \u5f53\u6ca1\u6709\u66f4\u591a\u5143\u7d20\u65f6\u629b\u51faStopIteration\u5f02\u5e38\n        if self.current &lt; 0:\n            raise StopIteration\n        value = self.current\n        self.current -= 1\n        return value\n\n# \u4f7f\u7528\u81ea\u5b9a\u4e49\u8fed\u4ee3\u5668\nfor i in Countdown(5):\n    print(i)  # \u8f93\u51fa: 5, 4, 3, 2, 1, 0\n\n# \u4f7f\u7528iter()\u548cnext()\u51fd\u6570\nnumbers = [1, 2, 3]\niterator = iter(numbers)  # \u83b7\u53d6\u8fed\u4ee3\u5668\nprint(next(iterator))  # \u8f93\u51fa: 1\nprint(next(iterator))  # \u8f93\u51fa: 2\nprint(next(iterator))  # \u8f93\u51fa: 3\n# print(next(iterator))  # \u6ca1\u6709\u66f4\u591a\u5143\u7d20\uff0c\u629b\u51faStopIteration\u5f02\u5e38\n</code></pre>"},{"location":"python/advanced/#_13","title":"\ud83d\udcbc \u4e0a\u4e0b\u6587\u7ba1\u7406\u5668","text":"<p>\u4e0a\u4e0b\u6587\u7ba1\u7406\u5668\u7528\u4e8e\u7ba1\u7406\u8d44\u6e90\uff08\u5982\u6587\u4ef6\u3001\u7f51\u7edc\u8fde\u63a5\u7b49\uff09\uff0c\u786e\u4fdd\u8d44\u6e90\u5728\u4f7f\u7528\u540e\u88ab\u6b63\u786e\u91ca\u653e\u3002</p>"},{"location":"python/advanced/#with","title":"with\u8bed\u53e5","text":"<pre><code># \u4f7f\u7528with\u8bed\u53e5\u6253\u5f00\u6587\u4ef6\uff08\u81ea\u52a8\u5173\u95ed\uff09\nwith open(\"example.txt\", \"w\") as f:\n    f.write(\"Hello, World!\")\n# \u6587\u4ef6\u5728\u8fd9\u91cc\u81ea\u52a8\u5173\u95ed\n\n# \u5d4c\u5957\u7684with\u8bed\u53e5\nwith open(\"file1.txt\", \"r\") as f1, open(\"file2.txt\", \"w\") as f2:\n    content = f1.read()\n    f2.write(content)\n</code></pre>"},{"location":"python/advanced/#_14","title":"\u81ea\u5b9a\u4e49\u4e0a\u4e0b\u6587\u7ba1\u7406\u5668","text":"<p>\u901a\u8fc7\u5b9e\u73b0__enter__()\u548c__exit__()\u65b9\u6cd5\u521b\u5efa\u81ea\u5b9a\u4e49\u4e0a\u4e0b\u6587\u7ba1\u7406\u5668\uff1a</p> <pre><code># \u901a\u8fc7\u7c7b\u5b9e\u73b0\u4e0a\u4e0b\u6587\u7ba1\u7406\u5668\nclass Timer:\n    def __enter__(self):\n        import time\n        self.start_time = time.time()\n        return self  # \u8fd4\u56de\u7684\u503c\u53ef\u4ee5\u5728with\u8bed\u53e5\u4e2d\u4f7f\u7528\n\n    def __exit__(self, exc_type, exc_val, exc_tb):\n        import time\n        self.end_time = time.time()\n        self.elapsed_time = self.end_time - self.start_time\n        print(f\"Elapsed time: {self.elapsed_time:.4f} seconds\")\n        # \u5982\u679c\u8fd4\u56deTrue\uff0c\u5c06\u6291\u5236\u5f02\u5e38\n        return False\n\n# \u4f7f\u7528\u81ea\u5b9a\u4e49\u4e0a\u4e0b\u6587\u7ba1\u7406\u5668\nwith Timer() as timer:\n    import time\n    time.sleep(1)  # \u6a21\u62df\u8017\u65f6\u64cd\u4f5c\nprint(f\"Total time: {timer.elapsed_time:.4f} seconds\")\n\n# \u5904\u7406\u5f02\u5e38\u7684\u4e0a\u4e0b\u6587\u7ba1\u7406\u5668\nclass ErrorHandler:\n    def __enter__(self):\n        print(\"\u8fdb\u5165\u4e0a\u4e0b\u6587\")\n        return self\n\n    def __exit__(self, exc_type, exc_val, exc_tb):\n        if exc_type is not None:\n            print(f\"\u6355\u83b7\u5230\u5f02\u5e38: {exc_type.__name__}: {exc_val}\")\n            # \u8fd4\u56deTrue\u8868\u793a\u5f02\u5e38\u5df2\u5904\u7406\uff0c\u4e0d\u4f1a\u5411\u4e0a\u4f20\u64ad\n            return True\n        print(\"\u6b63\u5e38\u9000\u51fa\u4e0a\u4e0b\u6587\")\n        return False\n\n# \u6d4b\u8bd5\u5f02\u5e38\u5904\u7406\nwith ErrorHandler():\n    print(\"\u6267\u884c\u4ee3\u7801\")\n    # \u6545\u610f\u5f15\u53d1\u5f02\u5e38\n    1/0\nprint(\"\u7a0b\u5e8f\u7ee7\u7eed\u6267\u884c\")  # \u7531\u4e8e\u5f02\u5e38\u88ab\u5904\u7406\uff0c\u8fd9\u884c\u4ee3\u7801\u4f1a\u6267\u884c\n</code></pre>"},{"location":"python/advanced/#contextlib","title":"contextlib\u6a21\u5757","text":"<p>\u4f7f\u7528contextlib\u6a21\u5757\u521b\u5efa\u4e0a\u4e0b\u6587\u7ba1\u7406\u5668\uff1a</p> <pre><code>import contextlib\n\n# \u4f7f\u7528contextlib.contextmanager\u88c5\u9970\u5668\u521b\u5efa\u4e0a\u4e0b\u6587\u7ba1\u7406\u5668\n@contextlib.contextmanager\ndef file_manager(filename, mode):\n    print(\"\u6253\u5f00\u6587\u4ef6\")\n    f = open(filename, mode)\n    try:\n        yield f  # yield\u8bed\u53e5\u8fd4\u56de\u8d44\u6e90\u7ed9with\u8bed\u53e5\n    finally:\n        print(\"\u5173\u95ed\u6587\u4ef6\")\n        f.close()\n\n# \u4f7f\u7528\u81ea\u5b9a\u4e49\u4e0a\u4e0b\u6587\u7ba1\u7406\u5668\nwith file_manager(\"example.txt\", \"r\") as f:\n    content = f.read()\n    print(f\"\u6587\u4ef6\u5185\u5bb9: {content}\")\n\n# \u4e34\u65f6\u4fee\u6539\u73af\u5883\u53d8\u91cf\n@contextlib.contextmanager\ndef temporary_env_var(key, value):\n    import os\n    # \u4fdd\u5b58\u539f\u59cb\u503c\n    original_value = os.environ.get(key)\n    # \u8bbe\u7f6e\u65b0\u503c\n    os.environ[key] = value\n    try:\n        yield\n    finally:\n        # \u6062\u590d\u539f\u59cb\u503c\n        if original_value is None:\n            del os.environ[key]\n        else:\n            os.environ[key] = original_value\n\n# \u4f7f\u7528\u4e34\u65f6\u73af\u5883\u53d8\u91cf\nwith temporary_env_var(\"MY_VAR\", \"my_value\"):\n    import os\n    print(f\"\u4e34\u65f6\u73af\u5883\u53d8\u91cf: {os.environ.get('MY_VAR')}\")\n</code></pre>"},{"location":"python/advanced/#_15","title":"\ud83c\udf9b\ufe0f \u5143\u7f16\u7a0b","text":"<p>\u5143\u7f16\u7a0b\u662f\u7f16\u5199\u80fd\u591f\u64cd\u4f5c\u4ee3\u7801\u7684\u4ee3\u7801\uff0cPython\u63d0\u4f9b\u4e86\u591a\u79cd\u5143\u7f16\u7a0b\u673a\u5236\u3002</p>"},{"location":"python/advanced/#_16","title":"\u53cd\u5c04\u4e0e\u5185\u7701","text":"<p>Python\u5141\u8bb8\u7a0b\u5e8f\u5728\u8fd0\u884c\u65f6\u68c0\u67e5\u548c\u4fee\u6539\u5bf9\u8c61\u7684\u5c5e\u6027\u548c\u65b9\u6cd5\uff1a</p> <pre><code># \u68c0\u67e5\u5bf9\u8c61\u7684\u5c5e\u6027\u548c\u65b9\u6cd5\nclass MyClass:\n    def __init__(self, value):\n        self.value = value\n\n    def my_method(self):\n        return self.value * 2\n\nobj = MyClass(42)\n\n# \u4f7f\u7528dir()\u5217\u51fa\u5bf9\u8c61\u7684\u6240\u6709\u5c5e\u6027\u548c\u65b9\u6cd5\nprint(dir(obj))\n\n# \u4f7f\u7528hasattr()\u68c0\u67e5\u5c5e\u6027\u662f\u5426\u5b58\u5728\nprint(hasattr(obj, \"value\"))  # \u8f93\u51fa: True\nprint(hasattr(obj, \"my_method\"))  # \u8f93\u51fa: True\n\n# \u4f7f\u7528getattr()\u83b7\u53d6\u5c5e\u6027\u503c\nprint(getattr(obj, \"value\"))  # \u8f93\u51fa: 42\nmethod = getattr(obj, \"my_method\")\nprint(method())  # \u8f93\u51fa: 84\n\n# \u4f7f\u7528setattr()\u8bbe\u7f6e\u5c5e\u6027\u503c\nsetattr(obj, \"new_value\", 100)\nprint(obj.new_value)  # \u8f93\u51fa: 100\n\n# \u4f7f\u7528delattr()\u5220\u9664\u5c5e\u6027\nif hasattr(obj, \"new_value\"):\n    delattr(obj, \"new_value\")\n</code></pre>"},{"location":"python/advanced/#_17","title":"\u52a8\u6001\u521b\u5efa\u7c7b","text":"<p>\u53ef\u4ee5\u5728\u8fd0\u884c\u65f6\u52a8\u6001\u521b\u5efa\u7c7b\uff1a</p> <pre><code># \u4f7f\u7528type()\u51fd\u6570\u52a8\u6001\u521b\u5efa\u7c7b\n# type(name, bases, dict)\nDynamicClass = type(\"DynamicClass\", (), {\n    \"class_var\": \"\u8fd9\u662f\u7c7b\u53d8\u91cf\",\n    \"instance_method\": lambda self, x: x * 2\n})\n\n# \u521b\u5efa\u5b9e\u4f8b\u5e76\u4f7f\u7528\ninstance = DynamicClass()\nprint(instance.class_var)  # \u8f93\u51fa: \u8fd9\u662f\u7c7b\u53d8\u91cf\nprint(instance.instance_method(5))  # \u8f93\u51fa: 10\n\n# \u52a8\u6001\u521b\u5efa\u5e26\u6709\u7ee7\u627f\u7684\u7c7b\nBaseClass = type(\"BaseClass\", (), {\n    \"base_method\": lambda self: \"\u8fd9\u662f\u57fa\u7c7b\u65b9\u6cd5\"\n})\n\nChildClass = type(\"ChildClass\", (BaseClass,), {\n    \"child_method\": lambda self: \"\u8fd9\u662f\u5b50\u7c7b\u65b9\u6cd5\"\n})\n\nchild = ChildClass()\nprint(child.base_method())  # \u8f93\u51fa: \u8fd9\u662f\u57fa\u7c7b\u65b9\u6cd5\nprint(child.child_method())  # \u8f93\u51fa: \u8fd9\u662f\u5b50\u7c7b\u65b9\u6cd5\n</code></pre>"},{"location":"python/advanced/#_18","title":"\u5143\u7c7b","text":"<p>\u5143\u7c7b\u662f\u521b\u5efa\u7c7b\u7684\u7c7b\uff0c\u7528\u4e8e\u63a7\u5236\u7c7b\u7684\u521b\u5efa\u8fc7\u7a0b\uff1a</p> <pre><code># \u5b9a\u4e49\u5143\u7c7b\nclass Meta(type):\n    # __new__\u65b9\u6cd5\u5728\u521b\u5efa\u7c7b\u4e4b\u524d\u8c03\u7528\n    def __new__(mcs, name, bases, attrs):\n        # \u6dfb\u52a0\u4e00\u4e2a\u524d\u7f00\u5230\u6240\u6709\u65b9\u6cd5\u540d\n        new_attrs = {}\n        for attr_name, attr_value in attrs.items():\n            if not attr_name.startswith(\"__\") and callable(attr_value):\n                new_attr_name = f\"prefix_{attr_name}\"\n                new_attrs[new_attr_name] = attr_value\n            else:\n                new_attrs[attr_name] = attr_value\n\n        # \u6dfb\u52a0\u4e00\u4e2a\u7c7b\u5c5e\u6027\n        new_attrs[\"added_by_meta\"] = \"\u8fd9\u662f\u5143\u7c7b\u6dfb\u52a0\u7684\u5c5e\u6027\"\n\n        # \u521b\u5efa\u5e76\u8fd4\u56de\u7c7b\n        return super().__new__(mcs, name, bases, new_attrs)\n\n# \u4f7f\u7528\u5143\u7c7b\nclass MyClass(metaclass=Meta):\n    def my_method(self):\n        return \"Hello from my_method\"\n\n# \u68c0\u67e5\u7ed3\u679c\nobj = MyClass()\nprint(hasattr(obj, \"my_method\"))  # \u8f93\u51fa: False\nprint(hasattr(obj, \"prefix_my_method\"))  # \u8f93\u51fa: True\nprint(obj.prefix_my_method())  # \u8f93\u51fa: Hello from my_method\nprint(obj.added_by_meta)  # \u8f93\u51fa: \u8fd9\u662f\u5143\u7c7b\u6dfb\u52a0\u7684\u5c5e\u6027\n</code></pre>"},{"location":"python/advanced/#_19","title":"\ud83d\udd27 \u9ad8\u7ea7\u6a21\u5757\u4e0e\u5e93","text":"<p>Python\u63d0\u4f9b\u4e86\u8bb8\u591a\u5f3a\u5927\u7684\u9ad8\u7ea7\u6a21\u5757\uff0c\u7528\u4e8e\u5404\u79cd\u7279\u5b9a\u573a\u666f\u3002</p>"},{"location":"python/advanced/#collections","title":"collections\u6a21\u5757","text":"<p>collections\u6a21\u5757\u63d0\u4f9b\u4e86\u989d\u5916\u7684\u6570\u636e\u7ed3\u6784\uff1a</p> <pre><code>from collections import Counter, defaultdict, deque, namedtuple, OrderedDict\n\n# Counter\uff1a\u7528\u4e8e\u8ba1\u6570\nwords = [\"apple\", \"banana\", \"apple\", \"orange\", \"banana\", \"apple\"]\nword_counts = Counter(words)\nprint(word_counts)  # \u8f93\u51fa: Counter({'apple': 3, 'banana': 2, 'orange': 1})\nprint(word_counts.most_common(2))  # \u8f93\u51fa: [('apple', 3), ('banana', 2)]\n\n# defaultdict\uff1a\u5e26\u6709\u9ed8\u8ba4\u503c\u7684\u5b57\u5178\ndef_dict = defaultdict(int)  # \u9ed8\u8ba4\u503c\u4e3a0\nfor word in words:\n    def_dict[word] += 1\nprint(dict(def_dict))  # \u8f93\u51fa: {'apple': 3, 'banana': 2, 'orange': 1}\n\n# deque\uff1a\u53cc\u7aef\u961f\u5217\nqueue = deque([1, 2, 3])\nqueue.append(4)  # \u5728\u53f3\u4fa7\u6dfb\u52a0\nqueue.appendleft(0)  # \u5728\u5de6\u4fa7\u6dfb\u52a0\nprint(queue)  # \u8f93\u51fa: deque([0, 1, 2, 3, 4])\nqueue.popleft()  # \u79fb\u9664\u5de6\u4fa7\u5143\u7d20\nprint(queue)  # \u8f93\u51fa: deque([1, 2, 3, 4])\n\n# namedtuple\uff1a\u547d\u540d\u5143\u7ec4\nPoint = namedtuple(\"Point\", [\"x\", \"y\"])\np = Point(10, 20)\nprint(p.x, p.y)  # \u8f93\u51fa: 10 20\nprint(p)  # \u8f93\u51fa: Point(x=10, y=20)\n\n# OrderedDict\uff1a\u6709\u5e8f\u5b57\u5178\n# \u6ce8\u610f\uff1aPython 3.7+ \u4e2d\uff0c\u666e\u901a\u5b57\u5178\u4e5f\u4fdd\u6301\u63d2\u5165\u987a\u5e8f\nordered_dict = OrderedDict()\nordered_dict[\"a\"] = 1\nordered_dict[\"b\"] = 2\nordered_dict[\"c\"] = 3\nfor key, value in ordered_dict.items():\n    print(key, value)  # \u6309\u63d2\u5165\u987a\u5e8f\u8f93\u51fa\n</code></pre>"},{"location":"python/advanced/#itertools","title":"itertools\u6a21\u5757","text":"<p>itertools\u6a21\u5757\u63d0\u4f9b\u4e86\u9ad8\u6548\u7684\u8fed\u4ee3\u5de5\u5177\uff1a</p> <pre><code>import itertools\n\n# count\uff1a\u65e0\u9650\u8ba1\u6570\u5668\ncounter = itertools.count(start=1, step=2)\nfor i in range(5):\n    print(next(counter))  # \u8f93\u51fa: 1, 3, 5, 7, 9\n\n# cycle\uff1a\u5faa\u73af\u8fed\u4ee3\u5668\ncolors = itertools.cycle([\"red\", \"green\", \"blue\"])\nfor i in range(5):\n    print(next(colors))  # \u8f93\u51fa: red, green, blue, red, green\n\n# repeat\uff1a\u91cd\u590d\u8fed\u4ee3\u5668\nrepeated = itertools.repeat(\"hello\", 3)\nfor item in repeated:\n    print(item)  # \u8f93\u51fa: hello, hello, hello\n\n# chain\uff1a\u8fde\u63a5\u591a\u4e2a\u8fed\u4ee3\u5668\ncombined = itertools.chain([1, 2, 3], [4, 5, 6])\nprint(list(combined))  # \u8f93\u51fa: [1, 2, 3, 4, 5, 6]\n\n# islice\uff1a\u5207\u7247\u8fed\u4ee3\u5668\nnumbers = range(10)\nsliced = itertools.islice(numbers, 2, 8, 2)\nprint(list(sliced))  # \u8f93\u51fa: [2, 4, 6]\n\n# zip_longest\uff1a\u7c7b\u4f3c\u4e8ezip\u4f46\u5904\u7406\u4e0d\u7b49\u957f\u5e8f\u5217\na = [1, 2, 3]\nb = [\"a\", \"b\"]\nz = itertools.zip_longest(a, b, fillvalue=\"None\")\nprint(list(z))  # \u8f93\u51fa: [(1, 'a'), (2, 'b'), (3, 'None')]\n\n# \u7ec4\u5408\u548c\u6392\u5217\ncombinations = itertools.combinations([1, 2, 3, 4], 2)\nprint(list(combinations))  # \u8f93\u51fa: [(1, 2), (1, 3), (1, 4), (2, 3), (2, 4), (3, 4)]\n\npermutations = itertools.permutations([1, 2, 3], 2)\nprint(list(permutations))  # \u8f93\u51fa: [(1, 2), (1, 3), (2, 1), (2, 3), (3, 1), (3, 2)]\n</code></pre>"},{"location":"python/advanced/#functools","title":"functools\u6a21\u5757","text":"<p>functools\u6a21\u5757\u63d0\u4f9b\u4e86\u51fd\u6570\u5f0f\u7f16\u7a0b\u5de5\u5177\uff1a</p> <pre><code>import functools\n\n# functools.reduce\uff1a\u7d2f\u79ef\u8ba1\u7b97\nnumbers = [1, 2, 3, 4, 5]\nsum_result = functools.reduce(lambda x, y: x + y, numbers)\nprint(sum_result)  # \u8f93\u51fa: 15\n\nproduct_result = functools.reduce(lambda x, y: x * y, numbers)\nprint(product_result)  # \u8f93\u51fa: 120\n\n# functools.partial\uff1a\u90e8\u5206\u5e94\u7528\u51fd\u6570\ndef power(base, exponent):\n    return base ** exponent\n\n# \u521b\u5efa\u4e00\u4e2a\u65b0\u51fd\u6570\uff0c\u56fa\u5b9aexponent=2\nsquare = functools.partial(power, exponent=2)\nprint(square(5))  # \u8f93\u51fa: 25\n\n# \u521b\u5efa\u4e00\u4e2a\u65b0\u51fd\u6570\uff0c\u56fa\u5b9abase=2\npower_of_two = functools.partial(power, 2)\nprint(power_of_two(3))  # \u8f93\u51fa: 8\n\n# functools.lru_cache\uff1a\u7f13\u5b58\u51fd\u6570\u7ed3\u679c\n@functools.lru_cache(maxsize=None)\ndef fibonacci(n):\n    if n &lt;= 1:\n        return n\n    return fibonacci(n-1) + fibonacci(n-2)\n\n# \u8c03\u7528\u901f\u5ea6\u4f1a\u6bd4\u4e0d\u7f13\u5b58\u5feb\u5f88\u591a\nprint(fibonacci(40))  # \u8f93\u51fa: 102334155\n\n# functools.wraps\uff1a\u4fdd\u7559\u539f\u51fd\u6570\u7684\u5143\u6570\u636e\uff08\u524d\u9762\u5df2\u7ecf\u4ecb\u7ecd\u8fc7\uff09\n</code></pre>"},{"location":"python/advanced/#re","title":"re\u6a21\u5757","text":"<p>re\u6a21\u5757\u63d0\u4f9b\u4e86\u6b63\u5219\u8868\u8fbe\u5f0f\u529f\u80fd\uff1a</p> <pre><code>import re\n\n# \u57fa\u672c\u5339\u914d\npattern = r\"\\d+\"  # \u5339\u914d\u4e00\u4e2a\u6216\u591a\u4e2a\u6570\u5b57\ntext = \"There are 123 apples and 456 oranges.\"\nmatch = re.search(pattern, text)\nif match:\n    print(f\"\u627e\u5230\u5339\u914d: {match.group()}\")  # \u8f93\u51fa: \u627e\u5230\u5339\u914d: 123\n\n# \u67e5\u627e\u6240\u6709\u5339\u914d\nmatches = re.findall(pattern, text)\nprint(f\"\u6240\u6709\u5339\u914d: {matches}\")  # \u8f93\u51fa: \u6240\u6709\u5339\u914d: ['123', '456']\n\n# \u66ff\u6362\nnew_text = re.sub(pattern, \"X\", text)\nprint(f\"\u66ff\u6362\u540e: {new_text}\")  # \u8f93\u51fa: \u66ff\u6362\u540e: There are X apples and X oranges.\n\n# \u5206\u5272\nparts = re.split(r\"\\s+\", \"Hello   world\\tfrom\\nPython\")\nprint(f\"\u5206\u5272\u7ed3\u679c: {parts}\")  # \u8f93\u51fa: \u5206\u5272\u7ed3\u679c: ['Hello', 'world', 'from', 'Python']\n\n# \u7f16\u8bd1\u6b63\u5219\u8868\u8fbe\u5f0f\uff08\u5bf9\u4e8e\u91cd\u590d\u4f7f\u7528\u7684\u6a21\u5f0f\u66f4\u9ad8\u6548\uff09\ncompiled_pattern = re.compile(r\"([a-zA-Z]+) (\\d+)\")\ntext = \"I have 3 apples and 5 oranges.\"\nmatch = compiled_pattern.search(text)\nif match:\n    print(f\"\u6c34\u679c: {match.group(1)}, \u6570\u91cf: {match.group(2)}\")  # \u8f93\u51fa: \u6c34\u679c: have, \u6570\u91cf: 3\n</code></pre>"},{"location":"python/advanced/#_20","title":"\u5e76\u53d1\u7f16\u7a0b\u6a21\u5757","text":"<p>Python\u63d0\u4f9b\u4e86\u591a\u79cd\u5e76\u53d1\u7f16\u7a0b\u7684\u6a21\u5757\uff1a</p>"},{"location":"python/advanced/#threading","title":"threading\u6a21\u5757","text":"<pre><code>import threading\nimport time\n\n# \u5b9a\u4e49\u7ebf\u7a0b\u51fd\u6570\ndef print_numbers():\n    for i in range(1, 6):\n        print(f\"\u6570\u5b57: {i}\")\n        time.sleep(1)\n\ndef print_letters():\n    for letter in [\"A\", \"B\", \"C\", \"D\", \"E\"]:\n        print(f\"\u5b57\u6bcd: {letter}\")\n        time.sleep(1.5)\n\n# \u521b\u5efa\u7ebf\u7a0b\nthread1 = threading.Thread(target=print_numbers)\nthread2 = threading.Thread(target=print_letters)\n\n# \u542f\u52a8\u7ebf\u7a0b\nthread1.start()\nthread2.start()\n\n# \u7b49\u5f85\u7ebf\u7a0b\u7ed3\u675f\nthread1.join()\nthread2.join()\n\nprint(\"\u6240\u6709\u7ebf\u7a0b\u5b8c\u6210\")\n\n# \u4f7f\u7528\u9501\u9632\u6b62\u7ade\u6001\u6761\u4ef6\ncounter = 0\nlock = threading.Lock()\n\ndef increment_counter():\n    global counter\n    for _ in range(100000):\n        with lock:  # \u81ea\u52a8\u83b7\u53d6\u548c\u91ca\u653e\u9501\n            counter += 1\n\n# \u521b\u5efa\u591a\u4e2a\u7ebf\u7a0b\nthreads = [threading.Thread(target=increment_counter) for _ in range(5)]\n\n# \u542f\u52a8\u6240\u6709\u7ebf\u7a0b\nfor thread in threads:\n    thread.start()\n\n# \u7b49\u5f85\u6240\u6709\u7ebf\u7a0b\u7ed3\u675f\nfor thread in threads:\n    thread.join()\n\nprint(f\"\u6700\u7ec8\u8ba1\u6570\u5668\u503c: {counter}\")  # \u5e94\u8be5\u662f500000\n</code></pre>"},{"location":"python/advanced/#multiprocessing","title":"multiprocessing\u6a21\u5757","text":"<pre><code>import multiprocessing\nimport time\n\n# \u5b9a\u4e49\u8fdb\u7a0b\u51fd\u6570\ndef square_numbers(numbers, result, index):\n    for i, n in enumerate(numbers):\n        result[index + i] = n * n\n        time.sleep(0.1)\n\n# \u521b\u5efa\u5171\u4eab\u5185\u5b58\u6570\u7ec4\nnumbers = [1, 2, 3, 4, 5, 6, 7, 8]\nshared_result = multiprocessing.Array('i', len(numbers))\n\n# \u521b\u5efa\u8fdb\u7a0b\nprocess1 = multiprocessing.Process(target=square_numbers, args=(numbers[:4], shared_result, 0))\nprocess2 = multiprocessing.Process(target=square_numbers, args=(numbers[4:], shared_result, 4))\n\n# \u542f\u52a8\u8fdb\u7a0b\nprocess1.start()\nprocess2.start()\n\n# \u7b49\u5f85\u8fdb\u7a0b\u7ed3\u675f\nprocess1.join()\nprocess2.join()\n\n# \u6253\u5370\u7ed3\u679c\nprint(f\"\u5e73\u65b9\u7ed3\u679c: {list(shared_result)}\")\n\n# \u4f7f\u7528\u8fdb\u7a0b\u6c60\ndef cube(n):\n    return n * n * n\n\n# \u521b\u5efa\u8fdb\u7a0b\u6c60\nwith multiprocessing.Pool(processes=4) as pool:\n    # \u4f7f\u7528map\u65b9\u6cd5\n    cubes = pool.map(cube, numbers)\n    print(f\"\u7acb\u65b9\u7ed3\u679c: {cubes}\")\n</code></pre>"},{"location":"python/advanced/#asyncio","title":"asyncio\u6a21\u5757","text":"<pre><code>import asyncio\n\n# \u5b9a\u4e49\u534f\u7a0b\u51fd\u6570\nasync def say_after(delay, what):\n    await asyncio.sleep(delay)\n    print(what)\n\n# \u4e3b\u534f\u7a0b\nasync def main():\n    # \u5e76\u53d1\u6267\u884c\u4e24\u4e2a\u534f\u7a0b\n    task1 = asyncio.create_task(say_after(1, \"Hello\"))\n    task2 = asyncio.create_task(say_after(2, \"World\"))\n\n    print(\"started tasks\")\n\n    # \u7b49\u5f85\u4e24\u4e2a\u4efb\u52a1\u5b8c\u6210\n    await task1\n    await task2\n\n    print(\"all tasks completed\")\n\n# \u8fd0\u884c\u4e3b\u534f\u7a0b\nasyncio.run(main())\n\n# \u4f7f\u7528asyncio.gather\u5e76\u53d1\u6267\u884c\u591a\u4e2a\u534f\u7a0b\nasync def factorial(n):\n    result = 1\n    for i in range(2, n+1):\n        result *= i\n        await asyncio.sleep(0.1)  # \u6a21\u62df\u5f02\u6b65\u64cd\u4f5c\n    return result\n\nasync def main_gather():\n    # \u5e76\u53d1\u6267\u884c\u591a\u4e2a\u534f\u7a0b\u5e76\u6536\u96c6\u7ed3\u679c\n    results = await asyncio.gather(\n        factorial(5),\n        factorial(6),\n        factorial(7)\n    )\n    print(f\"\u9636\u4e58\u7ed3\u679c: {results}\")\n\nasyncio.run(main_gather())\n</code></pre>"},{"location":"python/advanced/#_21","title":"\u5176\u4ed6\u5b9e\u7528\u9ad8\u7ea7\u6a21\u5757","text":"<ul> <li>json - \u7528\u4e8eJSON\u6570\u636e\u7684\u7f16\u7801\u548c\u89e3\u7801</li> <li>pickle - \u7528\u4e8ePython\u5bf9\u8c61\u7684\u5e8f\u5217\u5316\u548c\u53cd\u5e8f\u5217\u5316</li> <li>sqlite3 - \u5185\u7f6e\u7684SQLite\u6570\u636e\u5e93\u63a5\u53e3</li> <li>logging - \u7075\u6d3b\u7684\u65e5\u5fd7\u8bb0\u5f55\u5de5\u5177</li> <li>os - \u64cd\u4f5c\u7cfb\u7edf\u63a5\u53e3</li> <li>sys - Python\u89e3\u91ca\u5668\u76f8\u5173\u529f\u80fd</li> <li>datetime - \u65e5\u671f\u548c\u65f6\u95f4\u5904\u7406</li> <li>math - \u6570\u5b66\u51fd\u6570</li> <li>random - \u968f\u673a\u6570\u751f\u6210</li> <li>hashlib - \u5b89\u5168\u54c8\u5e0c\u7b97\u6cd5</li> <li>socket - \u7f51\u7edc\u901a\u4fe1</li> <li>urllib - URL\u5904\u7406\u548c\u7f51\u7edc\u8bf7\u6c42</li> </ul>"},{"location":"python/advanced/#_22","title":"\ud83d\udcca \u8bbe\u8ba1\u6a21\u5f0f","text":"<p>\u8bbe\u8ba1\u6a21\u5f0f\u662f\u89e3\u51b3\u7279\u5b9a\u95ee\u9898\u7684\u6210\u719f\u89e3\u51b3\u65b9\u6848\uff0cPython\u4e2d\u5e38\u89c1\u7684\u8bbe\u8ba1\u6a21\u5f0f\u5305\u62ec\uff1a</p>"},{"location":"python/advanced/#_23","title":"\u5355\u4f8b\u6a21\u5f0f","text":"<pre><code># \u4f7f\u7528\u6a21\u5757\u7ea7\u522b\u7684\u53d8\u91cf\u5b9e\u73b0\u5355\u4f8b\n_singleton_instance = None\n\ndef get_singleton():\n    global _singleton_instance\n    if _singleton_instance is None:\n        _singleton_instance = object()  # \u66ff\u6362\u4e3a\u5b9e\u9645\u7684\u7c7b\n    return _singleton_instance\n\n# \u4f7f\u7528\u5143\u7c7b\u5b9e\u73b0\u5355\u4f8b\nclass Singleton(type):\n    _instances = {}\n    def __call__(cls, *args, **kwargs):\n        if cls not in cls._instances:\n            cls._instances[cls] = super().__call__(*args, **kwargs)\n        return cls._instances[cls]\n\nclass Database(metaclass=Singleton):\n    def __init__(self):\n        self.connection_id = id(self)\n\n    def get_connection(self):\n        return f\"Connection ID: {self.connection_id}\"\n\n# \u6d4b\u8bd5\u5355\u4f8b\ndb1 = Database()\ndb2 = Database()\nprint(db1 is db2)  # \u8f93\u51fa: True\n</code></pre>"},{"location":"python/advanced/#_24","title":"\u5de5\u5382\u6a21\u5f0f","text":"<pre><code># \u7b80\u5355\u5de5\u5382\u6a21\u5f0f\nclass Animal:\n    def speak(self):\n        pass\n\nclass Dog(Animal):\n    def speak(self):\n        return \"Woof!\"\n\nclass Cat(Animal):\n    def speak(self):\n        return \"Meow!\"\n\nclass AnimalFactory:\n    @staticmethod\n    def create_animal(animal_type):\n        if animal_type == \"dog\":\n            return Dog()\n        elif animal_type == \"cat\":\n            return Cat()\n        else:\n            raise ValueError(f\"\u4e0d\u652f\u6301\u7684\u52a8\u7269\u7c7b\u578b: {animal_type}\")\n\n# \u4f7f\u7528\u5de5\u5382\u521b\u5efa\u5bf9\u8c61\nanimal1 = AnimalFactory.create_animal(\"dog\")\nprint(animal1.speak())  # \u8f93\u51fa: Woof!\n\nanimal2 = AnimalFactory.create_animal(\"cat\")\nprint(animal2.speak())  # \u8f93\u51fa: Meow!\n</code></pre>"},{"location":"python/advanced/#_25","title":"\u89c2\u5bdf\u8005\u6a21\u5f0f","text":"<pre><code># \u89c2\u5bdf\u8005\u6a21\u5f0f\nclass Subject:\n    def __init__(self):\n        self._observers = []\n\n    def attach(self, observer):\n        if observer not in self._observers:\n            self._observers.append(observer)\n\n    def detach(self, observer):\n        if observer in self._observers:\n            self._observers.remove(observer)\n\n    def notify(self):\n        for observer in self._observers:\n            observer.update(self)\n\nclass Observer:\n    def update(self, subject):\n        pass\n\nclass ConcreteObserverA(Observer):\n    def update(self, subject):\n        print(\"\u89c2\u5bdf\u8005A\u6536\u5230\u901a\u77e5\")\n\nclass ConcreteObserverB(Observer):\n    def update(self, subject):\n        print(\"\u89c2\u5bdf\u8005B\u6536\u5230\u901a\u77e5\")\n\n# \u6d4b\u8bd5\u89c2\u5bdf\u8005\u6a21\u5f0f\nsubject = Subject()\nobserver_a = ConcreteObserverA()\nobserver_b = ConcreteObserverB()\n\nsubject.attach(observer_a)\nsubject.attach(observer_b)\nsubject.notify()\n\nsubject.detach(observer_a)\nsubject.notify()\n</code></pre>"},{"location":"python/advanced/#_26","title":"\u88c5\u9970\u5668\u6a21\u5f0f","text":"<pre><code># \u88c5\u9970\u5668\u6a21\u5f0f\nclass Component:\n    def operation(self):\n        pass\n\nclass ConcreteComponent(Component):\n    def operation(self):\n        return \"\u57fa\u7840\u7ec4\u4ef6\"\n\nclass Decorator(Component):\n    def __init__(self, component):\n        self._component = component\n\n    def operation(self):\n        return self._component.operation()\n\nclass ConcreteDecoratorA(Decorator):\n    def operation(self):\n        return f\"\u88c5\u9970\u5668A({self._component.operation()})\"\n\nclass ConcreteDecoratorB(Decorator):\n    def operation(self):\n        return f\"\u88c5\u9970\u5668B({self._component.operation()})\"\n\n# \u6d4b\u8bd5\u88c5\u9970\u5668\u6a21\u5f0f\ncomponent = ConcreteComponent()\nprint(component.operation())  # \u8f93\u51fa: \u57fa\u7840\u7ec4\u4ef6\n\ndecorated_a = ConcreteDecoratorA(component)\nprint(decorated_a.operation())  # \u8f93\u51fa: \u88c5\u9970\u5668A(\u57fa\u7840\u7ec4\u4ef6)\n\ndecorated_b = ConcreteDecoratorB(decorated_a)\nprint(decorated_b.operation())  # \u8f93\u51fa: \u88c5\u9970\u5668B(\u88c5\u9970\u5668A(\u57fa\u7840\u7ec4\u4ef6))\n</code></pre>"},{"location":"python/advanced/#_27","title":"\ud83d\udca1 \u6027\u80fd\u4f18\u5316","text":"<p>Python\u6027\u80fd\u4f18\u5316\u7684\u4e00\u4e9b\u6280\u5de7\u548c\u6700\u4f73\u5b9e\u8df5\uff1a</p>"},{"location":"python/advanced/#_28","title":"\u4ee3\u7801\u4f18\u5316","text":"<pre><code># \u4f7f\u7528\u751f\u6210\u5668\u8868\u8fbe\u5f0f\u4ee3\u66ff\u5217\u8868\u63a8\u5bfc\u5f0f\uff08\u5bf9\u4e8e\u5927\u6570\u636e\u96c6\uff09\n# \u5217\u8868\u63a8\u5bfc\u5f0f\uff08\u4f1a\u4e00\u6b21\u6027\u521b\u5efa\u6574\u4e2a\u5217\u8868\uff09\nsquares_list = [x*x for x in range(1000000)]\n\n# \u751f\u6210\u5668\u8868\u8fbe\u5f0f\uff08\u6309\u9700\u751f\u6210\u503c\uff09\nsquares_gen = (x*x for x in range(1000000))\n\n# \u4f7f\u7528\u5c40\u90e8\u53d8\u91cf\nimport time\n\ndef slow_function():\n    start = time.time()\n    for _ in range(1000000):\n        result = time.time()  # \u6bcf\u6b21\u90fd\u8bbf\u95ee\u6a21\u5757\u7ea7\u522b\u7684\u53d8\u91cf\n    return time.time() - start\n\ndef fast_function():\n    start = time.time()\n    local_time = time.time  # \u7f13\u5b58\u5230\u5c40\u90e8\u53d8\u91cf\n    for _ in range(1000000):\n        result = local_time()\n    return time.time() - start\n\n# \u907f\u514d\u9891\u7e41\u7684\u5b57\u7b26\u4e32\u62fc\u63a5\uff08\u4f7f\u7528join\uff09\ndef slow_string_concat(n):\n    result = \"\"\n    for i in range(n):\n        result += str(i)  # \u6bcf\u6b21\u90fd\u4f1a\u521b\u5efa\u65b0\u7684\u5b57\u7b26\u4e32\n    return result\n\ndef fast_string_concat(n):\n    parts = []\n    for i in range(n):\n        parts.append(str(i))\n    return \"\".join(parts)  # \u66f4\u9ad8\u6548\u7684\u5b57\u7b26\u4e32\u8fde\u63a5\n</code></pre>"},{"location":"python/advanced/#_29","title":"\u4f7f\u7528\u66f4\u9ad8\u6548\u7684\u6570\u636e\u7ed3\u6784","text":"<pre><code># \u4f7f\u7528\u96c6\u5408\u8fdb\u884c\u6210\u5458\u68c0\u67e5\n# \u5217\u8868\u6210\u5458\u68c0\u67e5\uff08O(n)\u65f6\u95f4\u590d\u6742\u5ea6\uff09\nmy_list = list(range(10000))\nif 9999 in my_list:  # \u8f83\u6162\n    pass\n\n# \u96c6\u5408\u6210\u5458\u68c0\u67e5\uff08O(1)\u65f6\u95f4\u590d\u6742\u5ea6\uff09\nmy_set = set(range(10000))\nif 9999 in my_set:  # \u66f4\u5feb\n    pass\n\n# \u4f7f\u7528\u5b57\u5178\u6620\u5c04\u4ee3\u66ff\u591a\u4e2a\u6761\u4ef6\u5224\u65ad\n# \u591a\u4e2a\u6761\u4ef6\u5224\u65ad\ndef process_data(data_type, data):\n    if data_type == \"int\":\n        return int(data)\n    elif data_type == \"float\":\n        return float(data)\n    elif data_type == \"str\":\n        return str(data)\n    else:\n        return data\n\n# \u4f7f\u7528\u5b57\u5178\u6620\u5c04\nprocess_map = {\n    \"int\": int,\n    \"float\": float,\n    \"str\": str\n}\n\ndef process_data_fast(data_type, data):\n    return process_map.get(data_type, lambda x: x)(data)\n</code></pre>"},{"location":"python/advanced/#_30","title":"\u5e76\u884c\u8ba1\u7b97","text":"<pre><code># \u4f7f\u7528multiprocessing\u8fdb\u884c\u5e76\u884c\u8ba1\u7b97\nimport multiprocessing\nimport time\n\n# \u8ba1\u7b97\u5bc6\u96c6\u578b\u4efb\u52a1\ndef compute_intensive_task(n):\n    result = 0\n    for i in range(n):\n        result += i ** 2\n    return result\n\n# \u4e32\u884c\u8ba1\u7b97\nstart_time = time.time()\nresults_serial = [compute_intensive_task(10000000) for _ in range(4)]\nserial_time = time.time() - start_time\nprint(f\"\u4e32\u884c\u8ba1\u7b97\u65f6\u95f4: {serial_time:.2f}\u79d2\")\n\n# \u5e76\u884c\u8ba1\u7b97\nstart_time = time.time()\nwith multiprocessing.Pool(processes=4) as pool:\n    results_parallel = pool.map(compute_intensive_task, [10000000]*4)\nparallel_time = time.time() - start_time\nprint(f\"\u5e76\u884c\u8ba1\u7b97\u65f6\u95f4: {parallel_time:.2f}\u79d2\")\nprint(f\"\u52a0\u901f\u6bd4: {serial_time/parallel_time:.2f}x\")\n</code></pre>"},{"location":"python/advanced/#_31","title":"\u5176\u4ed6\u4f18\u5316\u6280\u5de7","text":"<ul> <li>\u4f7f\u7528\u66f4\u9ad8\u6548\u7684\u7b97\u6cd5\u548c\u6570\u636e\u7ed3\u6784</li> <li>\u907f\u514d\u4e0d\u5fc5\u8981\u7684\u5bf9\u8c61\u521b\u5efa</li> <li>\u4f7f\u7528\u5185\u7f6e\u51fd\u6570\u548c\u6a21\u5757\uff08\u901a\u5e38\u7528C\u5b9e\u73b0\uff0c\u901f\u5ea6\u66f4\u5feb\uff09</li> <li>\u4f7f\u7528\u751f\u6210\u5668\u548c\u8fed\u4ee3\u5668\u51cf\u5c11\u5185\u5b58\u4f7f\u7528</li> <li>\u5bf9\u4e8e\u6027\u80fd\u5173\u952e\u90e8\u5206\uff0c\u8003\u8651\u4f7f\u7528C\u6269\u5c55\u6216JIT\u7f16\u8bd1\u5668\uff08\u5982Numba\uff09</li> <li>\u4f7f\u7528\u9002\u5f53\u7684\u6027\u80fd\u5206\u6790\u5de5\u5177\uff08\u5982cProfile\uff09\u627e\u51fa\u6027\u80fd\u74f6\u9888</li> <li>\u8003\u8651\u4f7f\u7528\u5f02\u6b65\u7f16\u7a0b\u5904\u7406I/O\u5bc6\u96c6\u578b\u4efb\u52a1</li> <li>\u907f\u514d\u5728\u5faa\u73af\u4e2d\u8fdb\u884c\u6602\u8d35\u7684\u64cd\u4f5c</li> <li>\u4f7f\u7528\u7f13\u5b58\u907f\u514d\u91cd\u590d\u8ba1\u7b97</li> </ul>"},{"location":"python/advanced/#_32","title":"\ud83d\udcdd \u6700\u4f73\u5b9e\u8df5\u4e0e\u7f16\u7801\u89c4\u8303","text":"<p>\u7f16\u5199\u9ad8\u8d28\u91cfPython\u4ee3\u7801\u7684\u4e00\u4e9b\u6700\u4f73\u5b9e\u8df5\uff1a</p>"},{"location":"python/advanced/#pep-8","title":"PEP 8\u89c4\u8303","text":"<p>PEP 8\u662fPython\u7684\u5b98\u65b9\u4ee3\u7801\u98ce\u683c\u6307\u5357\uff0c\u4e3b\u8981\u5185\u5bb9\u5305\u62ec\uff1a</p> <ul> <li>\u4f7f\u75284\u4e2a\u7a7a\u683c\u8fdb\u884c\u7f29\u8fdb\uff08\u4e0d\u4f7f\u7528\u5236\u8868\u7b26\uff09</li> <li>\u6bcf\u884c\u4e0d\u8d85\u8fc779\u4e2a\u5b57\u7b26</li> <li>\u9876\u5c42\u51fd\u6570\u548c\u7c7b\u4e4b\u95f4\u4f7f\u7528\u4e24\u4e2a\u7a7a\u884c</li> <li>\u7c7b\u5185\u65b9\u6cd5\u4e4b\u95f4\u4f7f\u7528\u4e00\u4e2a\u7a7a\u884c</li> <li>\u4f7f\u7528\u7a7a\u683c\u56f4\u7ed5\u8fd0\u7b97\u7b26\u548c\u9017\u53f7</li> <li>\u51fd\u6570\u548c\u53d8\u91cf\u540d\u4f7f\u7528\u5c0f\u5199\u5b57\u6bcd\u548c\u4e0b\u5212\u7ebf\uff08snake_case\uff09</li> <li>\u7c7b\u540d\u4f7f\u7528\u9a7c\u5cf0\u547d\u540d\u6cd5\uff08CamelCase\uff09</li> <li>\u5e38\u91cf\u4f7f\u7528\u5168\u5927\u5199\u5b57\u6bcd\u548c\u4e0b\u5212\u7ebf</li> <li>\u907f\u514d\u4e0d\u5fc5\u8981\u7684\u62ec\u53f7</li> <li>\u5bfc\u5165\u8bed\u53e5\u653e\u5728\u6587\u4ef6\u9876\u90e8\uff0c\u5206\u7ec4\u5bfc\u5165</li> </ul>"},{"location":"python/advanced/#_33","title":"\u4ee3\u7801\u7ec4\u7ec7","text":"<pre><code># \u6a21\u5757\u7ed3\u6784\u793a\u4f8b\n\"\"\"\u6a21\u5757\u6587\u6863\u5b57\u7b26\u4e32\"\"\"\n\n# \u5bfc\u5165\u6807\u51c6\u5e93\nimport sys\nimport os\n\n# \u5bfc\u5165\u7b2c\u4e09\u65b9\u5e93\nimport numpy as np\nimport pandas as pd\n\n# \u5bfc\u5165\u672c\u5730\u6a21\u5757\nfrom .utils import helper_function\n\n# \u5e38\u91cf\u5b9a\u4e49\nMAX_RETRY = 3\nDEFAULT_TIMEOUT = 60\n\n# \u7c7b\u5b9a\u4e49\nclass MyClass:\n    \"\"\"\u7c7b\u6587\u6863\u5b57\u7b26\u4e32\"\"\"\n    def __init__(self, param1, param2=None):\n        \"\"\"\u521d\u59cb\u5316\u65b9\u6cd5\"\"\"\n        self.param1 = param1\n        self.param2 = param2\n\n    def my_method(self):\n        \"\"\"\u65b9\u6cd5\u6587\u6863\u5b57\u7b26\u4e32\"\"\"\n        # \u5b9e\u73b0\u4ee3\u7801\n        pass\n\n# \u51fd\u6570\u5b9a\u4e49\ndef my_function(arg1, arg2):\n    \"\"\"\u51fd\u6570\u6587\u6863\u5b57\u7b26\u4e32\"\"\"\n    # \u5b9e\u73b0\u4ee3\u7801\n    pass\n\n# \u6761\u4ef6\u6267\u884c\uff08\u4ec5\u5f53\u4f5c\u4e3a\u811a\u672c\u8fd0\u884c\u65f6\u6267\u884c\uff09\nif __name__ == \"__main__\":\n    # \u6d4b\u8bd5\u4ee3\u7801\u6216\u4e3b\u7a0b\u5e8f\u5165\u53e3\n    pass\n</code></pre>"},{"location":"python/advanced/#_34","title":"\u6587\u6863\u5b57\u7b26\u4e32","text":"<pre><code># \u51fd\u6570\u6587\u6863\u5b57\u7b26\u4e32\u793a\u4f8b\ndef calculate_area(length, width):\n    \"\"\"\u8ba1\u7b97\u77e9\u5f62\u7684\u9762\u79ef\n\n    \u53c2\u6570:\n        length (float): \u77e9\u5f62\u7684\u957f\u5ea6\n        width (float): \u77e9\u5f62\u7684\u5bbd\u5ea6\n\n    \u8fd4\u56de:\n        float: \u77e9\u5f62\u7684\u9762\u79ef\n\n    \u793a\u4f8b:\n        &gt;&gt;&gt; calculate_area(10, 5)\n        50.0\n    \"\"\"\n    return length * width\n\n# \u7c7b\u6587\u6863\u5b57\u7b26\u4e32\u793a\u4f8b\nclass Rectangle:\n    \"\"\"\u8868\u793a\u77e9\u5f62\u7684\u7c7b\n\n    \u5c5e\u6027:\n        length (float): \u77e9\u5f62\u7684\u957f\u5ea6\n        width (float): \u77e9\u5f62\u7684\u5bbd\u5ea6\n\n    \u65b9\u6cd5:\n        calculate_area(): \u8ba1\u7b97\u77e9\u5f62\u7684\u9762\u79ef\n        calculate_perimeter(): \u8ba1\u7b97\u77e9\u5f62\u7684\u5468\u957f\n    \"\"\"\n    def __init__(self, length, width):\n        \"\"\"\u521d\u59cb\u5316\u77e9\u5f62\n\n        \u53c2\u6570:\n            length (float): \u77e9\u5f62\u7684\u957f\u5ea6\n            width (float): \u77e9\u5f62\u7684\u5bbd\u5ea6\n        \"\"\"\n        self.length = length\n        self.width = width\n\n    def calculate_area(self):\n        \"\"\"\u8ba1\u7b97\u77e9\u5f62\u7684\u9762\u79ef\n\n        \u8fd4\u56de:\n            float: \u77e9\u5f62\u7684\u9762\u79ef\n        \"\"\"\n        return self.length * self.width\n</code></pre>"},{"location":"python/advanced/#_35","title":"\u9519\u8bef\u5904\u7406","text":"<pre><code># \u826f\u597d\u7684\u9519\u8bef\u5904\u7406\u793a\u4f8b\ndef read_file(filename):\n    \"\"\"\u8bfb\u53d6\u6587\u4ef6\u5185\u5bb9\n\n    \u53c2\u6570:\n        filename (str): \u6587\u4ef6\u540d\n\n    \u8fd4\u56de:\n        str: \u6587\u4ef6\u5185\u5bb9\n\n    \u5f02\u5e38:\n        FileNotFoundError: \u5f53\u6587\u4ef6\u4e0d\u5b58\u5728\u65f6\n        PermissionError: \u5f53\u6ca1\u6709\u6743\u9650\u8bfb\u53d6\u6587\u4ef6\u65f6\n        IOError: \u5f53\u53d1\u751f\u5176\u4ed6I/O\u9519\u8bef\u65f6\n    \"\"\"\n    try:\n        with open(filename, 'r', encoding='utf-8') as f:\n            return f.read()\n    except FileNotFoundError:\n        raise FileNotFoundError(f\"\u6587\u4ef6\u4e0d\u5b58\u5728: {filename}\")\n    except PermissionError:\n        raise PermissionError(f\"\u6ca1\u6709\u6743\u9650\u8bfb\u53d6\u6587\u4ef6: {filename}\")\n    except IOError as e:\n        raise IOError(f\"\u8bfb\u53d6\u6587\u4ef6\u65f6\u53d1\u751f\u9519\u8bef: {e}\")\n\n# \u4f7f\u7528\u6b64\u51fd\u6570\ntry:\n    content = read_file(\"example.txt\")\nexcept Exception as e:\n    print(f\"\u9519\u8bef: {e}\")\n</code></pre>"},{"location":"python/advanced/#_36","title":"\u5355\u5143\u6d4b\u8bd5","text":"<pre><code># \u5355\u5143\u6d4b\u8bd5\u793a\u4f8b\uff08\u4f7f\u7528unittest\u6a21\u5757\uff09\nimport unittest\n\nclass TestMathFunctions(unittest.TestCase):\n    def test_addition(self):\n        self.assertEqual(1 + 1, 2)\n        self.assertEqual(-1 + 1, 0)\n        self.assertEqual(100 + 200, 300)\n\n    def test_subtraction(self):\n        self.assertEqual(5 - 3, 2)\n        self.assertEqual(0 - 1, -1)\n\n    def test_multiplication(self):\n        self.assertEqual(2 * 3, 6)\n        self.assertEqual(-2 * 3, -6)\n        self.assertEqual(0 * 5, 0)\n\n    def test_division(self):\n        self.assertEqual(6 / 3, 2)\n        self.assertAlmostEqual(1 / 3, 0.3333333333)\n\n        # \u6d4b\u8bd5\u9664\u4ee5\u96f6\u7684\u60c5\u51b5\n        with self.assertRaises(ZeroDivisionError):\n            result = 1 / 0\n\n# \u8fd0\u884c\u6d4b\u8bd5\nif __name__ == '__main__':\n    unittest.main()\n\n# \u6216\u4f7f\u7528pytest\u6846\u67b6\n# def test_addition():\n#     assert 1 + 1 == 2\n#     assert -1 + 1 == 0\n#     assert 100 + 200 == 300\n</code></pre>"},{"location":"python/advanced/#_37","title":"\ud83d\ude80 \u603b\u7ed3","text":"<p>Python\u7684\u9ad8\u7ea7\u7279\u6027\u4e3a\u5f00\u53d1\u8005\u63d0\u4f9b\u4e86\u5f3a\u5927\u7684\u5de5\u5177\uff0c\u53ef\u4ee5\u7f16\u5199\u66f4\u52a0\u4f18\u96c5\u3001\u9ad8\u6548\u3001\u53ef\u7ef4\u62a4\u7684\u4ee3\u7801\u3002\u638c\u63e1\u8fd9\u4e9b\u7279\u6027\u4e0d\u4ec5\u53ef\u4ee5\u63d0\u9ad8\u7f16\u7a0b\u6548\u7387\uff0c\u8fd8\u53ef\u4ee5\u89e3\u51b3\u66f4\u590d\u6742\u7684\u95ee\u9898\u3002\u5efa\u8bae\u5728\u5b66\u4e60\u5b8c\u57fa\u7840\u77e5\u8bc6\u540e\uff0c\u9010\u6b65\u63a2\u7d22\u8fd9\u4e9b\u9ad8\u7ea7\u7279\u6027\uff0c\u5e76\u5728\u5b9e\u9645\u9879\u76ee\u4e2d\u7075\u6d3b\u5e94\u7528\u3002</p> <p>\u7ee7\u7eed\u5b66\u4e60\u7684\u65b9\u5411\uff1a</p> <ul> <li>\u6df1\u5165\u5b66\u4e60Python\u7684\u6807\u51c6\u5e93\u548c\u5e38\u7528\u7b2c\u4e09\u65b9\u5e93</li> <li>\u63a2\u7d22\u7279\u5b9a\u9886\u57df\u7684Python\u5e94\u7528\uff08\u5982Web\u5f00\u53d1\u3001\u6570\u636e\u5206\u6790\u3001\u4eba\u5de5\u667a\u80fd\u7b49\uff09</li> <li>\u5b66\u4e60Python\u7684\u5e95\u5c42\u5b9e\u73b0\u539f\u7406</li> <li>\u53c2\u4e0e\u5f00\u6e90\u9879\u76ee\uff0c\u79ef\u7d2f\u5b9e\u6218\u7ecf\u9a8c</li> <li>\u5173\u6ce8Python\u793e\u533a\u7684\u6700\u65b0\u53d1\u5c55\u8d8b\u52bf</li> </ul>"},{"location":"python/basic/","title":"Python\u57fa\u7840","text":"<p>\u672c\u7ae0\u8282\u8be6\u7ec6\u4ecb\u7ecdPython\u7684\u57fa\u7840\u77e5\u8bc6\uff0c\u5e2e\u52a9\u521d\u5b66\u8005\u5feb\u901f\u5165\u95e8\u5e76\u5efa\u7acb\u624e\u5b9e\u7684\u7f16\u7a0b\u57fa\u7840\u3002</p>"},{"location":"python/basic/#_1","title":"\ud83d\udccc \u57fa\u7840\u8bed\u6cd5","text":""},{"location":"python/basic/#_2","title":"\u6ce8\u91ca","text":"<p>\u6ce8\u91ca\u662f\u4ee3\u7801\u4e2d\u4e0d\u4f1a\u88ab\u6267\u884c\u7684\u6587\u672c\uff0c\u7528\u4e8e\u89e3\u91ca\u4ee3\u7801\u7684\u529f\u80fd\u548c\u903b\u8f91\u3002Python\u652f\u6301\u5355\u884c\u6ce8\u91ca\u548c\u591a\u884c\u6ce8\u91ca\u3002</p> <pre><code># \u8fd9\u662f\u4e00\u4e2a\u5355\u884c\u6ce8\u91ca\n\n\"\"\"\n\u8fd9\u662f\u4e00\u4e2a\u591a\u884c\u6ce8\u91ca\n\u53ef\u4ee5\u5305\u542b\u591a\u884c\u6587\u672c\n\"\"\"\n\nprint(\"Hello, World!\")  # \u8fd9\u4e5f\u662f\u4e00\u4e2a\u5355\u884c\u6ce8\u91ca\n</code></pre>"},{"location":"python/basic/#_3","title":"\u53d8\u91cf\u4e0e\u6570\u636e\u7c7b\u578b","text":"<p>Python\u662f\u52a8\u6001\u7c7b\u578b\u8bed\u8a00\uff0c\u53d8\u91cf\u4e0d\u9700\u8981\u58f0\u660e\u7c7b\u578b\u3002\u5e38\u7528\u7684\u6570\u636e\u7c7b\u578b\u5305\u62ec\uff1a</p>"},{"location":"python/basic/#_4","title":"\u6570\u503c\u7c7b\u578b","text":"<ul> <li>\u6574\u6570\uff08int\uff09\uff1a\u5305\u62ec\u6b63\u6574\u6570\u3001\u8d1f\u6574\u6570\u548c\u96f6</li> <li>\u6d6e\u70b9\u6570\uff08float\uff09\uff1a\u5e26\u5c0f\u6570\u70b9\u7684\u6570\u5b57</li> <li>\u590d\u6570\uff08complex\uff09\uff1a\u7531\u5b9e\u90e8\u548c\u865a\u90e8\u7ec4\u6210\u7684\u6570</li> </ul> <pre><code># \u6570\u503c\u7c7b\u578b\u793a\u4f8b\na = 10          # \u6574\u6570\nb = -5          # \u8d1f\u6574\u6570\nc = 3.14159     # \u6d6e\u70b9\u6570\nd = 2.5e3       # \u79d1\u5b66\u8ba1\u6570\u6cd5\u8868\u793a\u7684\u6d6e\u70b9\u6570\uff0c\u7b49\u540c\u4e8e2500\ne = 2 + 3j      # \u590d\u6570\n</code></pre>"},{"location":"python/basic/#_5","title":"\u5b57\u7b26\u4e32\u7c7b\u578b","text":"<p>\u5b57\u7b26\u4e32\u662f\u7531\u5b57\u7b26\u7ec4\u6210\u7684\u5e8f\u5217\uff0c\u7528\u4e8e\u8868\u793a\u6587\u672c\u4fe1\u606f\u3002</p> <pre><code># \u5b57\u7b26\u4e32\u793a\u4f8b\nstr1 = \"Hello, Python!\"           # \u4f7f\u7528\u53cc\u5f15\u53f7\nstr2 = 'Python is amazing'        # \u4f7f\u7528\u5355\u5f15\u53f7\nstr3 = '''\u8fd9\u662f\u4e00\u4e2a\n\u591a\u884c\u5b57\u7b26\u4e32'''     # \u4f7f\u7528\u4e09\u5f15\u53f7\u5b9a\u4e49\u591a\u884c\u5b57\u7b26\u4e32\nstr4 = \"\"\"\u8fd9\u4e5f\u662f\u4e00\u4e2a\n\u591a\u884c\u5b57\u7b26\u4e32\"\"\"\n\n# \u5b57\u7b26\u4e32\u62fc\u63a5\ngreeting = \"Hello, \" + \"World!\"  # \u7ed3\u679c: \"Hello, World!\"\n\n# \u5b57\u7b26\u4e32\u683c\u5f0f\u5316\nname = \"YG\"\nage = 25\nmessage = f\"My name is {name} and I'm {age} years old.\"  # f-string\u683c\u5f0f\u5316\nmessage2 = \"My name is {} and I'm {} years old.\".format(name, age)  # format\u65b9\u6cd5\n</code></pre>"},{"location":"python/basic/#_6","title":"\u5e03\u5c14\u7c7b\u578b","text":"<p>\u5e03\u5c14\u7c7b\u578b\u53ea\u6709\u4e24\u4e2a\u503c\uff1a<code>True</code> \u548c <code>False</code>\uff0c\u4e3b\u8981\u7528\u4e8e\u6761\u4ef6\u5224\u65ad\u3002</p> <pre><code># \u5e03\u5c14\u7c7b\u578b\u793a\u4f8b\nis_valid = True\nis_empty = False\n\n# \u5e03\u5c14\u8fd0\u7b97\nresult1 = True and False  # \u903b\u8f91\u4e0e\uff0c\u7ed3\u679c\u4e3aFalse\nresult2 = True or False   # \u903b\u8f91\u6216\uff0c\u7ed3\u679c\u4e3aTrue\nresult3 = not True        # \u903b\u8f91\u975e\uff0c\u7ed3\u679c\u4e3aFalse\n</code></pre>"},{"location":"python/basic/#_7","title":"\u7c7b\u578b\u8f6c\u6362","text":"<p>Python\u652f\u6301\u4e0d\u540c\u6570\u636e\u7c7b\u578b\u4e4b\u95f4\u7684\u8f6c\u6362\u3002</p> <pre><code># \u7c7b\u578b\u8f6c\u6362\u793a\u4f8b\nnum_str = \"123\"\nnum_int = int(num_str)        # \u5b57\u7b26\u4e32\u8f6c\u6574\u6570\nnum_float = float(num_str)    # \u5b57\u7b26\u4e32\u8f6c\u6d6e\u70b9\u6570\n\nnum = 123\nnum_str = str(num)            # \u6574\u6570\u8f6c\u5b57\u7b26\u4e32\n\n# \u6ce8\u610f\uff1a\u4e0d\u662f\u6240\u6709\u5b57\u7b26\u4e32\u90fd\u80fd\u8f6c\u6362\u4e3a\u6570\u5b57\n# int(\"abc\")  # \u8fd9\u4f1a\u629b\u51fa\u9519\u8bef\n</code></pre>"},{"location":"python/basic/#_8","title":"\ud83d\udcca \u6570\u636e\u7ed3\u6784","text":"<p>Python\u63d0\u4f9b\u4e86\u591a\u79cd\u5185\u7f6e\u7684\u6570\u636e\u7ed3\u6784\uff0c\u7528\u4e8e\u5b58\u50a8\u548c\u7ec4\u7ec7\u6570\u636e\u3002</p>"},{"location":"python/basic/#list","title":"\u5217\u8868\uff08List\uff09","text":"<p>\u5217\u8868\u662f\u6709\u5e8f\u7684\u53ef\u53d8\u5e8f\u5217\uff0c\u53ef\u4ee5\u5b58\u50a8\u4efb\u610f\u7c7b\u578b\u7684\u5143\u7d20\u3002</p> <pre><code># \u5217\u8868\u793a\u4f8b\nnumbers = [1, 2, 3, 4, 5]           # \u6574\u6570\u5217\u8868\nmixed = [1, \"hello\", 3.14, True]    # \u6df7\u5408\u7c7b\u578b\u5217\u8868\n\n# \u8bbf\u95ee\u5217\u8868\u5143\u7d20\nfirst_element = numbers[0]          # \u8bbf\u95ee\u7b2c\u4e00\u4e2a\u5143\u7d20\uff08\u7d22\u5f15\u4ece0\u5f00\u59cb\uff09\nlast_element = numbers[-1]          # \u8bbf\u95ee\u6700\u540e\u4e00\u4e2a\u5143\u7d20\n\n# \u4fee\u6539\u5217\u8868\nnumbers[0] = 10                     # \u4fee\u6539\u7b2c\u4e00\u4e2a\u5143\u7d20\nnumbers.append(6)                   # \u6dfb\u52a0\u5143\u7d20\u5230\u5217\u8868\u672b\u5c3e\nnumbers.insert(2, 100)              # \u5728\u6307\u5b9a\u4f4d\u7f6e\u63d2\u5165\u5143\u7d20\nnumbers.remove(3)                   # \u5220\u9664\u6307\u5b9a\u503c\u7684\u5143\u7d20\nnumbers.pop()                       # \u5220\u9664\u5e76\u8fd4\u56de\u6700\u540e\u4e00\u4e2a\u5143\u7d20\n\n# \u5217\u8868\u5207\u7247\nsubset = numbers[1:4]               # \u83b7\u53d6\u7d22\u5f151\u52303\u7684\u5143\u7d20\uff08\u4e0d\u5305\u62ec4\uff09\n</code></pre>"},{"location":"python/basic/#tuple","title":"\u5143\u7ec4\uff08Tuple\uff09","text":"<p>\u5143\u7ec4\u662f\u6709\u5e8f\u7684\u4e0d\u53ef\u53d8\u5e8f\u5217\uff0c\u4e00\u65e6\u521b\u5efa\u5c31\u4e0d\u80fd\u4fee\u6539\u3002</p> <pre><code># \u5143\u7ec4\u793a\u4f8b\ncolors = (\"red\", \"green\", \"blue\")   # \u521b\u5efa\u5143\u7ec4\npoint = (10, 20)                     # \u8868\u793a\u5750\u6807\u7684\u5143\u7ec4\n\nsingle_element = (42,)               # \u53ea\u6709\u4e00\u4e2a\u5143\u7d20\u7684\u5143\u7ec4\uff0c\u9017\u53f7\u4e0d\u80fd\u7701\u7565\n\n# \u8bbf\u95ee\u5143\u7ec4\u5143\u7d20\nthe_color = colors[0]\n\n# \u5143\u7ec4\u89e3\u5305\na, b = point                         # a=10, b=20\n</code></pre>"},{"location":"python/basic/#dictionary","title":"\u5b57\u5178\uff08Dictionary\uff09","text":"<p>\u5b57\u5178\u662f\u65e0\u5e8f\u7684\u952e\u503c\u5bf9\u96c6\u5408\uff0c\u901a\u8fc7\u952e\u6765\u8bbf\u95ee\u503c\u3002</p> <pre><code># \u5b57\u5178\u793a\u4f8b\nperson = {\n    \"name\": \"YG\",\n    \"age\": 25,\n    \"city\": \"Beijing\"\n}\n\n# \u8bbf\u95ee\u5b57\u5178\u503c\nname = person[\"name\"]               # \u901a\u8fc7\u952e\u8bbf\u95ee\u503c\nage = person.get(\"age\")              # \u4f7f\u7528get\u65b9\u6cd5\u8bbf\u95ee\u503c\n\n# \u4fee\u6539\u5b57\u5178\nperson[\"job\"] = \"Developer\"          # \u6dfb\u52a0\u65b0\u7684\u952e\u503c\u5bf9\nperson[\"age\"] = 26                  # \u4fee\u6539\u5df2\u6709\u503c\n\n# \u5220\u9664\u5143\u7d20\nperson.pop(\"city\")                   # \u5220\u9664\u6307\u5b9a\u952e\u7684\u5143\u7d20\n\n# \u904d\u5386\u5b57\u5178\nfor key, value in person.items():\n    print(f\"{key}: {value}\")\n</code></pre>"},{"location":"python/basic/#set","title":"\u96c6\u5408\uff08Set\uff09","text":"<p>\u96c6\u5408\u662f\u65e0\u5e8f\u7684\u3001\u4e0d\u91cd\u590d\u7684\u5143\u7d20\u96c6\u5408\u3002</p> <pre><code># \u96c6\u5408\u793a\u4f8b\nfruits = {\"apple\", \"banana\", \"cherry\"}\nempty_set = set()                    # \u521b\u5efa\u7a7a\u96c6\u5408\n\n# \u6dfb\u52a0\u5143\u7d20\nfruits.add(\"orange\")\n\n# \u5220\u9664\u5143\u7d20\nfruits.remove(\"banana\")              # \u5982\u679c\u5143\u7d20\u4e0d\u5b58\u5728\u4f1a\u629b\u51fa\u9519\u8bef\nfruits.discard(\"grape\")              # \u5982\u679c\u5143\u7d20\u4e0d\u5b58\u5728\u4e0d\u4f1a\u629b\u51fa\u9519\u8bef\n\n# \u96c6\u5408\u8fd0\u7b97\nset1 = {1, 2, 3, 4}\nset2 = {3, 4, 5, 6}\nunion = set1 | set2                  # \u5e76\u96c6: {1, 2, 3, 4, 5, 6}\nintersection = set1 &amp; set2           # \u4ea4\u96c6: {3, 4}\ndifference = set1 - set2             # \u5dee\u96c6: {1, 2}\n</code></pre>"},{"location":"python/basic/#_9","title":"\ud83c\udf9b\ufe0f \u63a7\u5236\u7ed3\u6784","text":"<p>\u63a7\u5236\u7ed3\u6784\u7528\u4e8e\u63a7\u5236\u7a0b\u5e8f\u7684\u6267\u884c\u6d41\u7a0b\u3002</p>"},{"location":"python/basic/#_10","title":"\u6761\u4ef6\u8bed\u53e5","text":"<p>\u6761\u4ef6\u8bed\u53e5\u6839\u636e\u6761\u4ef6\u7684\u771f\u5047\u6765\u51b3\u5b9a\u6267\u884c\u7684\u4ee3\u7801\u5757\u3002</p> <pre><code># \u57fa\u672c\u6761\u4ef6\u8bed\u53e5\nage = 18\nif age &gt;= 18:\n    print(\"\u6210\u5e74\u4eba\")\nelif age &gt;= 13:\n    print(\"\u9752\u5c11\u5e74\")\nelse:\n    print(\"\u513f\u7ae5\")\n\n# \u6761\u4ef6\u8868\u8fbe\u5f0f\uff08\u4e09\u5143\u8fd0\u7b97\u7b26\uff09\nresult = \"\u6210\u5e74\u4eba\" if age &gt;= 18 else \"\u672a\u6210\u5e74\u4eba\"\n\n# \u5d4c\u5957\u6761\u4ef6\u8bed\u53e5\ntemperature = 25\nif temperature &gt; 30:\n    print(\"\u5929\u6c14\u708e\u70ed\")\n    print(\"\u6ce8\u610f\u9632\u6691\")\nelif temperature &gt; 20:\n    print(\"\u5929\u6c14\u8212\u9002\")\nelse:\n    print(\"\u5929\u6c14\u8f83\u51b7\")\n    if temperature &lt; 0:\n        print(\"\u6ce8\u610f\u4fdd\u6696\")\n</code></pre>"},{"location":"python/basic/#_11","title":"\u5faa\u73af\u8bed\u53e5","text":"<p>\u5faa\u73af\u8bed\u53e5\u7528\u4e8e\u91cd\u590d\u6267\u884c\u4e00\u6bb5\u4ee3\u7801\u3002</p>"},{"location":"python/basic/#for","title":"for\u5faa\u73af","text":"<p>for\u5faa\u73af\u7528\u4e8e\u904d\u5386\u5e8f\u5217\u6216\u5176\u4ed6\u53ef\u8fed\u4ee3\u5bf9\u8c61\u3002</p> <pre><code># \u904d\u5386\u5217\u8868\nnumbers = [1, 2, 3, 4, 5]\nfor num in numbers:\n    print(num)\n\n# \u4f7f\u7528range\u51fd\u6570\nfor i in range(5):              # \u751f\u62100-4\u7684\u5e8f\u5217\n    print(i)\n\nfor i in range(1, 10, 2):       # \u751f\u62101-9\u7684\u5947\u6570\u5e8f\u5217\n    print(i)\n\n# \u904d\u5386\u5b57\u5178\nperson = {\"name\": \"YG\", \"age\": 25}\nfor key in person:\n    print(key, person[key])\n\nfor key, value in person.items():\n    print(f\"{key}: {value}\")\n</code></pre>"},{"location":"python/basic/#while","title":"while\u5faa\u73af","text":"<p>while\u5faa\u73af\u5728\u6761\u4ef6\u4e3a\u771f\u65f6\u91cd\u590d\u6267\u884c\u4ee3\u7801\u5757\u3002</p> <pre><code># \u57fa\u672cwhile\u5faa\u73af\ncount = 0\nwhile count &lt; 5:\n    print(count)\n    count += 1\n\n# \u65e0\u9650\u5faa\u73af\uff08\u9700\u8981\u5728\u5185\u90e8\u6709break\u8bed\u53e5\uff09\nwhile True:\n    user_input = input(\"\u8bf7\u8f93\u5165\u5185\u5bb9\uff08\u8f93\u5165'\u9000\u51fa'\u7ed3\u675f\uff09\uff1a\")\n    if user_input == \"\u9000\u51fa\":\n        break\n    print(f\"\u4f60\u8f93\u5165\u7684\u662f\uff1a{user_input}\")\n</code></pre>"},{"location":"python/basic/#_12","title":"\u5faa\u73af\u63a7\u5236\u8bed\u53e5","text":"<ul> <li><code>break</code>\uff1a\u8df3\u51fa\u5f53\u524d\u5faa\u73af</li> <li><code>continue</code>\uff1a\u8df3\u8fc7\u5f53\u524d\u5faa\u73af\u7684\u5269\u4f59\u90e8\u5206\uff0c\u7ee7\u7eed\u4e0b\u4e00\u6b21\u5faa\u73af</li> <li><code>else</code>\uff1a\u5faa\u73af\u6b63\u5e38\u7ed3\u675f\u65f6\u6267\u884c\uff08\u6ca1\u6709\u88abbreak\u4e2d\u65ad\uff09</li> </ul> <pre><code># break\u793a\u4f8b\nfor i in range(10):\n    if i == 5:\n        break\n    print(i)  # \u53ea\u4f1a\u6253\u53700-4\n\n# continue\u793a\u4f8b\nfor i in range(10):\n    if i % 2 == 0:\n        continue\n    print(i)  # \u53ea\u6253\u5370\u5947\u6570\n\n# else\u793a\u4f8b\nfor i in range(5):\n    print(i)\nelse:\n    print(\"\u5faa\u73af\u6b63\u5e38\u7ed3\u675f\")\n</code></pre>"},{"location":"python/basic/#_13","title":"\ud83d\udcdd \u51fd\u6570","text":"<p>\u51fd\u6570\u662f\u7ec4\u7ec7\u597d\u7684\u3001\u53ef\u91cd\u590d\u4f7f\u7528\u7684\u3001\u7528\u6765\u5b9e\u73b0\u7279\u5b9a\u529f\u80fd\u7684\u4ee3\u7801\u5757\u3002</p>"},{"location":"python/basic/#_14","title":"\u51fd\u6570\u5b9a\u4e49\u548c\u8c03\u7528","text":"<pre><code># \u5b9a\u4e49\u51fd\u6570\ndef greet(name):\n    \"\"\"\u6253\u5370\u95ee\u5019\u4fe1\u606f\uff08\u8fd9\u662f\u6587\u6863\u5b57\u7b26\u4e32\uff09\"\"\"\n    print(f\"Hello, {name}!\")\n\n# \u8c03\u7528\u51fd\u6570\ngreet(\"YG\")\n\n# \u67e5\u770b\u51fd\u6570\u6587\u6863\nprint(greet.__doc__)\n</code></pre>"},{"location":"python/basic/#_15","title":"\u51fd\u6570\u53c2\u6570","text":"<p>Python\u51fd\u6570\u652f\u6301\u591a\u79cd\u53c2\u6570\u7c7b\u578b\uff1a</p> <pre><code># \u4f4d\u7f6e\u53c2\u6570\ndef add(a, b):\n    return a + b\n\nresult = add(3, 5)\n\n# \u9ed8\u8ba4\u53c2\u6570\ndef greet(name, greeting=\"Hello\"):\n    return f\"{greeting}, {name}!\"\n\nprint(greet(\"YG\"))               # \u4f7f\u7528\u9ed8\u8ba4\u95ee\u5019\u8bed\nprint(greet(\"YG\", \"Hi\"))         # \u8986\u76d6\u9ed8\u8ba4\u95ee\u5019\u8bed\n\n# \u5173\u952e\u5b57\u53c2\u6570\ndef describe_person(name, age, city):\n    return f\"{name} is {age} years old and lives in {city}.\"\n\n# \u4f7f\u7528\u5173\u952e\u5b57\u53c2\u6570\u53ef\u4ee5\u6539\u53d8\u53c2\u6570\u987a\u5e8f\nprint(describe_person(age=25, name=\"YG\", city=\"Beijing\"))\n\n# \u53ef\u53d8\u53c2\u6570\uff08*args\uff09\ndef sum_numbers(*args):\n    \"\"\"\u8ba1\u7b97\u4efb\u610f\u6570\u91cf\u6570\u5b57\u7684\u548c\"\"\"\n    total = 0\n    for num in args:\n        total += num\n    return total\n\nprint(sum_numbers(1, 2, 3, 4))\n\n# \u5173\u952e\u5b57\u53ef\u53d8\u53c2\u6570\uff08**kwargs\uff09\ndef print_info(**kwargs):\n    \"\"\"\u6253\u5370\u4efb\u610f\u5173\u952e\u5b57\u53c2\u6570\"\"\"\n    for key, value in kwargs.items():\n        print(f\"{key}: {value}\")\n\nprint_info(name=\"YG\", age=25, city=\"Beijing\")\n</code></pre>"},{"location":"python/basic/#_16","title":"\u8fd4\u56de\u503c","text":"<p>\u51fd\u6570\u53ef\u4ee5\u8fd4\u56de\u4e00\u4e2a\u503c\u3001\u591a\u4e2a\u503c\uff08\u4f5c\u4e3a\u5143\u7ec4\uff09\u6216\u4e0d\u8fd4\u56de\u4efb\u4f55\u503c\uff08\u5b9e\u9645\u4e0a\u8fd4\u56deNone\uff09\u3002</p> <pre><code># \u8fd4\u56de\u5355\u4e2a\u503c\ndef square(x):\n    return x * x\n\n# \u8fd4\u56de\u591a\u4e2a\u503c\ndef get_coordinates():\n    x = 10\n    y = 20\n    return x, y  # \u5b9e\u9645\u4e0a\u8fd4\u56de\u7684\u662f\u5143\u7ec4 (10, 20)\n\n# \u89e3\u5305\u591a\u4e2a\u8fd4\u56de\u503c\nx, y = get_coordinates()\n\n# \u4e0d\u8fd4\u56de\u503c\u7684\u51fd\u6570\ndef say_hello():\n    print(\"Hello!\")\n    # \u6ca1\u6709return\u8bed\u53e5\uff0c\u9ed8\u8ba4\u8fd4\u56deNone\n</code></pre>"},{"location":"python/basic/#lambda","title":"Lambda\u51fd\u6570","text":"<p>Lambda\u51fd\u6570\u662f\u4e00\u79cd\u5c0f\u578b\u7684\u3001\u533f\u540d\u7684\u51fd\u6570\uff0c\u53ef\u4ee5\u7528\u4e00\u884c\u4ee3\u7801\u5b9a\u4e49\u3002</p> <pre><code># \u57fa\u672clambda\u51fd\u6570\nsquare = lambda x: x * x\nprint(square(5))  # \u8f93\u51fa: 25\n\n# \u5728\u51fd\u6570\u4e2d\u4f7f\u7528lambda\ndef apply_operation(x, y, operation):\n    return operation(x, y)\n\naddition = apply_operation(3, 4, lambda a, b: a + b)\nmultiplication = apply_operation(3, 4, lambda a, b: a * b)\n\n# \u7ed3\u5408\u5185\u7f6e\u51fd\u6570\u4f7f\u7528\numbers = [1, 2, 3, 4, 5]\neven_numbers = list(filter(lambda x: x % 2 == 0, numbers))\nsquared_numbers = list(map(lambda x: x * x, numbers))\n</code></pre>"},{"location":"python/basic/#_17","title":"\u26a0\ufe0f \u5f02\u5e38\u5904\u7406","text":"<p>\u5f02\u5e38\u5904\u7406\u7528\u4e8e\u6355\u83b7\u548c\u5904\u7406\u7a0b\u5e8f\u8fd0\u884c\u65f6\u53ef\u80fd\u51fa\u73b0\u7684\u9519\u8bef\u3002</p> <pre><code># \u57fa\u672c\u5f02\u5e38\u5904\u7406\ntry:\n    num = int(input(\"\u8bf7\u8f93\u5165\u4e00\u4e2a\u6570\u5b57\uff1a\"))\n    result = 10 / num\n    print(f\"\u7ed3\u679c\u662f\uff1a{result}\")\nexcept ValueError:\n    print(\"\u8bf7\u8f93\u5165\u6709\u6548\u7684\u6570\u5b57\uff01\")\nexcept ZeroDivisionError:\n    print(\"\u9664\u6570\u4e0d\u80fd\u4e3a\u96f6\uff01\")\nexcept Exception as e:\n    print(f\"\u53d1\u751f\u9519\u8bef\uff1a{e}\")\nelse:\n    print(\"\u6ca1\u6709\u53d1\u751f\u5f02\u5e38\")\nfinally:\n    print(\"\u65e0\u8bba\u662f\u5426\u53d1\u751f\u5f02\u5e38\uff0c\u90fd\u4f1a\u6267\u884c\u8fd9\u91cc\u7684\u4ee3\u7801\")\n\n# \u629b\u51fa\u5f02\u5e38\ndef check_positive_number(num):\n    if num &lt;= 0:\n        raise ValueError(\"\u6570\u5b57\u5fc5\u987b\u662f\u6b63\u6570\")\n    return num\n\ntry:\n    check_positive_number(-5)\nexcept ValueError as e:\n    print(f\"\u6355\u83b7\u5230\u5f02\u5e38\uff1a{e}\")\n</code></pre>"},{"location":"python/basic/#_18","title":"\ud83d\udcda \u6a21\u5757\u4e0e\u5305","text":"<p>\u6a21\u5757\u662f\u4e00\u4e2a\u5305\u542bPython\u5b9a\u4e49\u548c\u8bed\u53e5\u7684\u6587\u4ef6\u3002\u5305\u662f\u4e00\u4e2a\u5305\u542b\u591a\u4e2a\u6a21\u5757\u7684\u76ee\u5f55\u3002</p> <pre><code># \u5bfc\u5165\u6574\u4e2a\u6a21\u5757\nimport math\nprint(math.sqrt(16))  # \u8f93\u51fa: 4.0\n\n# \u5bfc\u5165\u6a21\u5757\u4e2d\u7684\u7279\u5b9a\u51fd\u6570\nfrom math import sqrt, pi\nprint(sqrt(25))  # \u8f93\u51fa: 5.0\nprint(pi)        # \u8f93\u51fa: 3.141592653589793\n\n# \u5bfc\u5165\u6a21\u5757\u7684\u6240\u6709\u5185\u5bb9\nfrom math import *\n\n# \u4f7f\u7528\u522b\u540d\nimport numpy as np\nimport pandas as pd\n\n# \u5bfc\u5165\u81ea\u5b9a\u4e49\u6a21\u5757\n# \u5047\u8bbe\u6211\u4eec\u6709\u4e00\u4e2a\u540d\u4e3a my_module.py \u7684\u6587\u4ef6\n# import my_module\n# my_module.my_function()\n</code></pre>"},{"location":"python/basic/#_19","title":"\ud83d\udcca \u5e38\u7528\u5185\u7f6e\u51fd\u6570","text":"<p>Python\u63d0\u4f9b\u4e86\u8bb8\u591a\u5185\u7f6e\u51fd\u6570\uff0c\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528\uff1a</p> <ul> <li><code>print(*objects, sep=' ', end='\\n', file=sys.stdout, flush=False)</code> - \u8f93\u51fa\u4fe1\u606f\u5230\u63a7\u5236\u53f0</li> <li><code>input(prompt=None)</code> - \u83b7\u53d6\u7528\u6237\u8f93\u5165\u7684\u5b57\u7b26\u4e32</li> <li><code>len(s)</code> - \u8fd4\u56de\u5bf9\u8c61\u7684\u957f\u5ea6\uff08\u5143\u7d20\u4e2a\u6570\uff09</li> <li><code>type(object)</code> - \u8fd4\u56de\u5bf9\u8c61\u7684\u7c7b\u578b</li> <li><code>int(x, base=10)</code> - \u5c06\u5bf9\u8c61\u8f6c\u6362\u4e3a\u6574\u6570</li> <li><code>float(x)</code> - \u5c06\u5bf9\u8c61\u8f6c\u6362\u4e3a\u6d6e\u70b9\u6570</li> <li><code>str(object='')</code> - \u5c06\u5bf9\u8c61\u8f6c\u6362\u4e3a\u5b57\u7b26\u4e32</li> <li><code>bool(x)</code> - \u5c06\u5bf9\u8c61\u8f6c\u6362\u4e3a\u5e03\u5c14\u503c</li> <li><code>list(iterable)</code> - \u521b\u5efa\u4e00\u4e2a\u5217\u8868</li> <li><code>tuple(iterable)</code> - \u521b\u5efa\u4e00\u4e2a\u5143\u7ec4</li> <li><code>dict(**kwargs)</code>, <code>dict(mapping)</code>, <code>dict(iterable)</code> - \u521b\u5efa\u4e00\u4e2a\u5b57\u5178</li> <li><code>set(iterable)</code> - \u521b\u5efa\u4e00\u4e2a\u96c6\u5408</li> <li><code>range(start, stop[, step])</code> - \u751f\u6210\u4e00\u4e2a\u6574\u6570\u5e8f\u5217</li> <li><code>abs(x)</code> - \u8fd4\u56de\u6570\u5b57\u7684\u7edd\u5bf9\u503c</li> <li><code>max(*args, key=None)</code> - \u8fd4\u56de\u6700\u5927\u503c</li> <li><code>min(*args, key=None)</code> - \u8fd4\u56de\u6700\u5c0f\u503c</li> <li><code>sum(iterable, start=0)</code> - \u6c42\u548c</li> <li><code>sorted(iterable, key=None, reverse=False)</code> - \u6392\u5e8f</li> <li><code>reversed(seq)</code> - \u53cd\u8f6c\u5e8f\u5217</li> <li><code>enumerate(iterable, start=0)</code> - \u8fd4\u56de\u679a\u4e3e\u5bf9\u8c61\uff0c\u5305\u542b\u7d22\u5f15\u548c\u503c</li> <li><code>zip(*iterables)</code> - \u5c06\u591a\u4e2a\u53ef\u8fed\u4ee3\u5bf9\u8c61\u6253\u5305\u6210\u5143\u7ec4</li> </ul>"},{"location":"python/basic/#_20","title":"\ud83d\udca1 \u5b66\u4e60\u63d0\u793a","text":"<ul> <li>\u591a\u52a8\u624b\u7ec3\u4e60\uff0c\u7f16\u5199\u5c0f\u7a0b\u5e8f</li> <li>\u9605\u8bfb\u5b98\u65b9\u6587\u6863\u548c\u4f18\u8d28\u6559\u7a0b</li> <li>\u53c2\u4e0e\u7f16\u7a0b\u793e\u533a\uff0c\u89e3\u51b3\u5b9e\u9645\u95ee\u9898</li> <li>\u5b66\u4e60\u8c03\u8bd5\u6280\u5de7\uff0c\u7406\u89e3\u9519\u8bef\u4fe1\u606f</li> <li>\u57f9\u517b\u826f\u597d\u7684\u4ee3\u7801\u98ce\u683c\u548c\u4e60\u60ef</li> <li>\u6ce8\u91cd\u57fa\u7840\u77e5\u8bc6\u7684\u624e\u5b9e\u638c\u63e1</li> <li>\u5c1d\u8bd5\u7528Python\u89e3\u51b3\u5b9e\u9645\u95ee\u9898</li> </ul>"}]}